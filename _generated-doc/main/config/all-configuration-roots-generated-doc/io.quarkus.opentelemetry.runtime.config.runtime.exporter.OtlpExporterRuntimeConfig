[{"configDocKey":{"type":"string","key":"quarkus.otel.exporter.otlp.endpoint","configDoc":"Sets the OTLP endpoint to connect to. If unset, defaults to `OtlpExporterRuntimeConfig++#++DEFAULT_GRPC_BASE_URI`. We are currently using just the traces, therefore `quarkus.otel.exporter.otlp.traces.endpoint` is recommended.","withinAMap":false,"defaultValue":"http://localhost:4317/","javaDocSiteLink":"","docMapKey":"endpoint","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.otel.exporter.otlp","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.otel.exporter.otlp.traces.endpoint","configDoc":"OTLP Exporter specific. Will override `otel.exporter.otlp.endpoint`, if set. \nFallbacks to the legacy property `quarkus.opentelemetry.tracer.exporter.otlp.endpoint<` or defaults to `OtlpExporterRuntimeConfig++#++DEFAULT_GRPC_BASE_URI`.","withinAMap":false,"defaultValue":"http://localhost:4317/","javaDocSiteLink":"","docMapKey":"endpoint","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.otel.exporter.otlp","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.otel.exporter.otlp.traces.headers","configDoc":"Key-value pairs to be used as headers associated with gRPC requests. The format is similar to the `OTEL_EXPORTER_OTLP_HEADERS` environment variable, a list of key-value pairs separated by the \"=\" character. i.e.: key1=value1,key2=value2","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"headers","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":true,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.otel.exporter.otlp","enum":false}},{"configDocKey":{"type":"io.quarkus.opentelemetry.runtime.config.runtime.exporter.CompressionType","key":"quarkus.otel.exporter.otlp.traces.compression","configDoc":"Sets the method used to compress payloads. If unset, compression is disabled. Currently supported compression methods include `gzip` and `none`.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"compression","configPhase":"RUN_TIME","acceptedValues":["`gzip`","`none`"],"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.otel.exporter.otlp","enum":true}},{"configDocKey":{"type":"java.time.Duration","key":"quarkus.otel.exporter.otlp.traces.timeout","configDoc":"Sets the maximum time to wait for the collector to process an exported batch of spans. If unset, defaults to `OtlpExporterRuntimeConfig++#++DEFAULT_TIMEOUT_SECS`s.","withinAMap":false,"defaultValue":"10S","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"timeout","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.otel.exporter.otlp","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.otel.exporter.otlp.traces.protocol","configDoc":"OTLP defines the encoding of telemetry data and the protocol used to exchange data between the client and the server. Depending on the exporter, the available protocols will be different.","withinAMap":false,"defaultValue":"http/protobuf","javaDocSiteLink":"","docMapKey":"protocol","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.otel.exporter.otlp","enum":false}}]