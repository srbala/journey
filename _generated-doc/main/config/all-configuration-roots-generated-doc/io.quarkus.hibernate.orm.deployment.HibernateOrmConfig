[{"configDocKey":{"type":"boolean","key":"quarkus.hibernate-orm.enabled","configDoc":"Whether Hibernate ORM is enabled *during the build*.\n\nIf Hibernate ORM is disabled during the build, all processing related to Hibernate ORM will be skipped,\nbut it will not be possible to activate Hibernate ORM at runtime:\n`quarkus.hibernate-orm.active` will default to `false` and setting it to `true` will lead to an error.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"enabled","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}},{"configDocSection":{"name":"quarkus.hibernate-orm.database","optional":false,"withinAMap":false,"sectionDetails":"= Database related configuration","sectionDetailsTitle":"Database related configuration","configPhase":"BUILD_TIME","topLevelGrouping":"quarkus.hibernate-orm","configGroupType":"io.quarkus.hibernate.orm.deployment.HibernateOrmConfig.HibernateOrmConfigDatabase","showSection":true,"configDocItems":[{"configDocKey":{"type":"io.quarkus.hibernate.orm.runtime.config.DatabaseOrmCompatibilityVersion","key":"quarkus.hibernate-orm.database.orm-compatibility.version","configDoc":"When set, attempts to exchange data with the database\nas the given version of Hibernate ORM would have,\n*on a best-effort basis*.\n\nPlease note:\n\n* schema validation may still fail in some cases:\nthis attempts to make Hibernate ORM 6+ behave correctly at runtime,\nbut it may still expect a different (but runtime-compatible) schema.\n* robust test suites are still useful and recommended:\nyou should still check that your application behaves as intended with your legacy schema.\n* this feature is inherently unstable:\nsome aspects of it may stop working in future versions of Quarkus,\nand older versions will be dropped as Hibernate ORM changes pile up\nand support for those older versions becomes too unreliable.\n* you should still plan a migration of your schema to a newer version of Hibernate ORM.\nFor help with migration, refer to\nlink:https://github.com/quarkusio/quarkus/wiki/Migration-Guide-3.0:-Hibernate-ORM-5-to-6-migration[the Quarkus 3\nmigration guide from Hibernate ORM 5 to 6].","withinAMap":false,"defaultValue":"latest","javaDocSiteLink":"","docMapKey":"orm-compatibility-version","configPhase":"BUILD_TIME","acceptedValues":["`5.6`","`latest`"],"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":true}},{"configDocKey":{"type":"java.nio.charset.Charset","key":"quarkus.hibernate-orm.database.charset","configDoc":"The charset of the database. \nUsed for DDL generation and also for the SQL import scripts.","withinAMap":false,"defaultValue":"UTF-8","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/nio/charset/Charset.html","docMapKey":"charset","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}}],"anchorPrefix":null}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-orm.datasource","configDoc":"","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"datasource","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-orm.packages","configDoc":"","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"packages","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":true,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}},{"configDocSection":{"name":"quarkus.hibernate-orm.dialect","optional":false,"withinAMap":false,"sectionDetails":"== Dialect related configuration","sectionDetailsTitle":"Dialect related configuration","configPhase":"BUILD_TIME","topLevelGrouping":"quarkus.hibernate-orm","configGroupType":"io.quarkus.hibernate.orm.deployment.HibernateOrmConfigPersistenceUnit.HibernateOrmConfigPersistenceUnitDialect","showSection":true,"configDocItems":[{"configDocKey":{"type":"string","key":"quarkus.hibernate-orm.dialect","configDoc":"Class name of the Hibernate ORM dialect.\n\nThe complete list of bundled dialects is available in the\nhttps://docs.jboss.org/hibernate/stable/orm/javadocs/org/hibernate/dialect/package-summary.html[Hibernate ORM\nJavaDoc].\n\nSetting the dialect directly is only recommended as a last resort:\nmost popular databases have a corresponding Quarkus extension,\nallowing Quarkus to select the dialect automatically,\nin which case you do not need to set the dialect at all,\nthough you may want to set\nxref:datasource.adoc#quarkus-datasource_quarkus.datasource.db-version[`quarkus.datasource.db-version`] as\nhigh as possible\nto benefit from the best performance and latest features.\n\nIf your database does not have a corresponding Quarkus extension,\nyou will need to set the dialect directly.\nIn that case, keep in mind that the JDBC driver and Hibernate ORM dialect\nmay not work properly in GraalVM native executables.","withinAMap":false,"defaultValue":"selected automatically for most popular databases","javaDocSiteLink":"","docMapKey":"dialect","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-orm.dialect.storage-engine","configDoc":"The storage engine to use when the dialect supports multiple storage engines.\n\nE.g. `MyISAM` or `InnoDB` for MySQL.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"storage-engine","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}}],"anchorPrefix":null}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-orm.sql-load-script","configDoc":"Path to a file containing the SQL statements to execute when Hibernate ORM starts.\n\nThe file is retrieved from the classpath resources,\nso it must be located in the resources directory (e.g. `src/main/resources`).\n\nThe default value for this setting differs depending on the Quarkus launch mode:\n\n* In dev and test modes, it defaults to `import.sql`.\n  Simply add an `import.sql` file in the root of your resources directory\n  and it will be picked up without having to set this property.\n  Pass `no-file` to force Hibernate ORM to ignore the SQL import file.\n* In production mode, it defaults to `no-file`.\n  It means Hibernate ORM won't try to execute any SQL import file by default.\n  Pass an explicit value to force Hibernate ORM to execute the SQL import file.\n\nIf you need different SQL statements between dev mode, test (`@QuarkusTest`) and in production, use Quarkus\nhttps://quarkus.io/guides/config#configuration-profiles[configuration profiles facility].\n\n[source,property]\n.application.properties\n----\n%dev.quarkus.hibernate-orm.sql-load-script = import-dev.sql\n%test.quarkus.hibernate-orm.sql-load-script = import-test.sql\n%prod.quarkus.hibernate-orm.sql-load-script = no-file\n----\n\n[NOTE]\n====\nQuarkus supports `.sql` file with SQL statements or comments spread over multiple lines.\nEach SQL statement must be terminated by a semicolon.\n====","withinAMap":false,"defaultValue":"import.sql in DEV, TEST ; no-file otherwise","javaDocSiteLink":"","docMapKey":"sql-load-script","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":true,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-orm.physical-naming-strategy","configDoc":"Pluggable strategy contract for applying physical naming rules for database object names. Class name of the Hibernate PhysicalNamingStrategy implementation","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"physical-naming-strategy","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-orm.implicit-naming-strategy","configDoc":"Pluggable strategy for applying implicit naming rules when an explicit name is not given. Class name of the Hibernate ImplicitNamingStrategy implementation","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"implicit-naming-strategy","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-orm.metadata-builder-contributor","configDoc":"Class name of a custom\nhttps://docs.jboss.org/hibernate/stable/orm/javadocs/org/hibernate/boot/spi/MetadataBuilderContributor.html[`org.hibernate.boot.spi.MetadataBuilderContributor`]\nimplementation.\n\n[NOTE]\n====\nNot all customization options exposed by\nhttps://docs.jboss.org/hibernate/stable/orm/javadocs/org/hibernate/boot/MetadataBuilder.html[`org.hibernate.boot.MetadataBuilder`]\nwill work correctly. Stay clear of options related to classpath scanning in particular.\n\nThis setting is exposed mainly to allow registration of types, converters and SQL functions.\n====","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"metadata-builder-contributor","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-orm.mapping-files","configDoc":"XML files to configure the entity mapping, e.g. `META-INF/my-orm.xml`. \nDefaults to `META-INF/orm.xml` if it exists. Pass `no-file` to force Hibernate ORM to ignore `META-INF/orm.xml`.","withinAMap":false,"defaultValue":"META-INF/orm.xml if it exists; no-file otherwise","javaDocSiteLink":"","docMapKey":"mapping-files","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":true,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}},{"configDocSection":{"name":"quarkus.hibernate-orm.mapping","optional":false,"withinAMap":false,"sectionDetails":"== Mapping configuration","sectionDetailsTitle":"Mapping configuration","configPhase":"BUILD_TIME","topLevelGrouping":"quarkus.hibernate-orm","configGroupType":"io.quarkus.hibernate.orm.deployment.HibernateOrmConfigPersistenceUnit.HibernateOrmConfigPersistenceUnitMapping","showSection":true,"configDocItems":[{"configDocKey":{"type":"org.hibernate.annotations.TimeZoneStorageType","key":"quarkus.hibernate-orm.mapping.timezone.default-storage","configDoc":"How to store timezones in the database by default\nfor properties of type `OffsetDateTime` and `ZonedDateTime`.\n\nThis default may be overridden on a per-property basis using `@TimeZoneStorage`.\n\nNOTE: Properties of type `OffsetTime` are https://hibernate.atlassian.net/browse/HHH-16287[not affected by this\nsetting].\n\n`default`::\nEquivalent to `native` if supported, `normalize-utc` otherwise.\n`auto`::\nEquivalent to `native` if supported, `column` otherwise.\n`native`::\nStores the timestamp and timezone in a column of type `timestamp with time zone`.\n+\nOnly available on some databases/dialects;\nif not supported, an exception will be thrown during static initialization.\n`column`::\nStores the timezone in a separate column next to the timestamp column.\n+\nUse `@TimeZoneColumn` on the relevant entity property to customize the timezone column.\n`normalize-utc`::\nDoes not store the timezone, and loses timezone information upon persisting.\n+\nInstead, normalizes the value to a timestamp in the UTC timezone.\n`normalize`::\nDoes not store the timezone, and loses timezone information upon persisting.\n+\nInstead, normalizes the value:\n* upon persisting to the database, to a timestamp in the JDBC timezone\nset through `quarkus.hibernate-orm.jdbc.timezone`,\nor the JVM default timezone if not set.\n* upon reading back from the database, to the JVM default timezone.\n+\nUse this to get the legacy behavior of Quarkus 2 / Hibernate ORM 5 or older.","withinAMap":false,"defaultValue":"default","javaDocSiteLink":"","docMapKey":"time-zone-default-storage","configPhase":"BUILD_TIME","acceptedValues":["`native`","`normalize`","`normalize-utc`","`column`","`auto`","`default`"],"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":true}},{"configDocKey":{"type":"io.quarkus.hibernate.orm.deployment.HibernateOrmConfigPersistenceUnit.IdOptimizerType","key":"quarkus.hibernate-orm.mapping.id.optimizer.default","configDoc":"The optimizer to apply to identifier generators\nwhose optimizer is not configured explicitly.\n\nOnly relevant for table- and sequence-based identifier generators.\nOther generators, such as UUID-based generators, will ignore this setting.\n\nThe optimizer is responsible for pooling new identifier values,\nin order to reduce the frequency of database calls to retrieve those values\nand thereby improve performance.","withinAMap":false,"defaultValue":"pooled-lo","javaDocSiteLink":"","docMapKey":"id-optimizer-default","configPhase":"BUILD_TIME","acceptedValues":["`pooled-lo`","`pooled`","`none`"],"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":true}}],"anchorPrefix":null}},{"configDocSection":{"name":"quarkus.hibernate-orm.query","optional":false,"withinAMap":false,"sectionDetails":"== Query related configuration","sectionDetailsTitle":"Query related configuration","configPhase":"BUILD_TIME","topLevelGrouping":"quarkus.hibernate-orm","configGroupType":"io.quarkus.hibernate.orm.deployment.HibernateOrmConfigPersistenceUnit.HibernateOrmConfigPersistenceUnitQuery","showSection":true,"configDocItems":[{"configDocKey":{"type":"int","key":"quarkus.hibernate-orm.query.query-plan-cache-max-size","configDoc":"The maximum size of the query plan cache. see ++#++`org.hibernate.cfg.AvailableSettings++#++QUERY_PLAN_CACHE_MAX_SIZE`","withinAMap":false,"defaultValue":"2048","javaDocSiteLink":"","docMapKey":"query-plan-cache-max-size","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}},{"configDocKey":{"type":"io.quarkus.hibernate.orm.deployment.HibernateOrmConfigPersistenceUnit.HibernateOrmConfigPersistenceUnitQuery.NullOrdering","key":"quarkus.hibernate-orm.query.default-null-ordering","configDoc":"Default precedence of null values in `ORDER BY` clauses.\n\nValid values are: `none`, `first`, `last`.","withinAMap":false,"defaultValue":"none","javaDocSiteLink":"","docMapKey":"default-null-ordering","configPhase":"BUILD_TIME","acceptedValues":["`none`","`first`","`last`"],"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":true}},{"configDocKey":{"type":"boolean","key":"quarkus.hibernate-orm.query.in-clause-parameter-padding","configDoc":"Enables IN clause parameter padding which improves statement caching.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"in-clause-parameter-padding","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}}],"anchorPrefix":null}},{"configDocSection":{"name":"quarkus.hibernate-orm.jdbc","optional":false,"withinAMap":false,"sectionDetails":"== JDBC related configuration","sectionDetailsTitle":"JDBC related configuration","configPhase":"BUILD_TIME","topLevelGrouping":"quarkus.hibernate-orm","configGroupType":"io.quarkus.hibernate.orm.deployment.HibernateOrmConfigPersistenceUnit.HibernateOrmConfigPersistenceUnitJdbc","showSection":true,"configDocItems":[{"configDocKey":{"type":"string","key":"quarkus.hibernate-orm.jdbc.timezone","configDoc":"The time zone pushed to the JDBC driver. See `quarkus.hibernate-orm.mapping.timezone.default-storage`.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"timezone","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}},{"configDocKey":{"type":"java.lang.Integer","key":"quarkus.hibernate-orm.jdbc.statement-fetch-size","configDoc":"How many rows are fetched at a time by the JDBC driver.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"statement-fetch-size","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}},{"configDocKey":{"type":"java.lang.Integer","key":"quarkus.hibernate-orm.jdbc.statement-batch-size","configDoc":"The number of updates (inserts, updates and deletes) that are sent by the JDBC driver at one time for execution.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"statement-batch-size","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}}],"anchorPrefix":null}},{"configDocSection":{"name":"quarkus.hibernate-orm.fetch","optional":false,"withinAMap":false,"sectionDetails":"== Fetching logic configuration","sectionDetailsTitle":"Fetching logic configuration","configPhase":"BUILD_TIME","topLevelGrouping":"quarkus.hibernate-orm","configGroupType":"io.quarkus.hibernate.orm.deployment.HibernateOrmConfigPersistenceUnit.HibernateOrmConfigPersistenceUnitFetch","showSection":true,"configDocItems":[{"configDocKey":{"type":"java.lang.Integer","key":"quarkus.hibernate-orm.fetch.batch-size","configDoc":"The size of the batches used when loading entities and collections.\n\n`-1` means batch loading is disabled.","withinAMap":false,"defaultValue":"16","javaDocSiteLink":"","docMapKey":"batch-size","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}},{"configDocKey":{"type":"java.lang.Integer","key":"quarkus.hibernate-orm.fetch.max-depth","configDoc":"The maximum depth of outer join fetch tree for single-ended associations (one-to-one, many-to-one).\n\nA `0` disables default outer join fetching.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"max-depth","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}}],"anchorPrefix":null}},{"configDocSection":{"name":"quarkus.hibernate-orm.cache","optional":false,"withinAMap":false,"sectionDetails":"== Caching configuration","sectionDetailsTitle":"Caching configuration","configPhase":"BUILD_TIME","topLevelGrouping":"quarkus.hibernate-orm","configGroupType":"io.quarkus.hibernate.orm.deployment.HibernateOrmConfigPersistenceUnit.HibernateOrmConfigPersistenceUnitCache","showSection":true,"configDocItems":[{"configDocKey":{"type":"java.time.Duration","key":"quarkus.hibernate-orm.cache.\"cache\".expiration.max-idle","configDoc":"The maximum time before an object of the cache is considered expired.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"max-idle","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}},{"configDocKey":{"type":"java.lang.Long","key":"quarkus.hibernate-orm.cache.\"cache\".memory.object-count","configDoc":"The maximum number of objects kept in memory in the cache.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"object-count","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}}],"anchorPrefix":null}},{"configDocSection":{"name":"quarkus.hibernate-orm.discriminator","optional":false,"withinAMap":false,"sectionDetails":"== Discriminator related configuration","sectionDetailsTitle":"Discriminator related configuration","configPhase":"BUILD_TIME","topLevelGrouping":"quarkus.hibernate-orm","configGroupType":"io.quarkus.hibernate.orm.deployment.HibernateOrmConfigPersistenceUnit.HibernateOrmConfigPersistenceUnitDiscriminator","showSection":true,"configDocItems":[{"configDocKey":{"type":"boolean","key":"quarkus.hibernate-orm.discriminator.ignore-explicit-for-joined","configDoc":"Existing applications rely (implicitly or explicitly) on Hibernate ignoring any DiscriminatorColumn declarations on joined inheritance hierarchies. This setting allows these applications to maintain the legacy behavior of DiscriminatorColumn annotations being ignored when paired with joined inheritance.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"ignore-explicit-for-joined","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}}],"anchorPrefix":null}},{"configDocKey":{"type":"io.quarkus.hibernate.orm.deployment.HibernateOrmConfigPersistenceUnit.IdentifierQuotingStrategy","key":"quarkus.hibernate-orm.quote-identifiers.strategy","configDoc":"Identifiers can be quoted using one of the available strategies. \nSet to `none` by default, meaning no identifiers will be quoted. If set to `all`, all identifiers and column definitions will be quoted. Additionally, setting it to `all-except-column-definitions` will skip the column definitions, which can usually be required when they exist, or else use the option `only-keywords` to quote only identifiers deemed SQL keywords by the Hibernate ORM dialect.","withinAMap":false,"defaultValue":"none","javaDocSiteLink":"","docMapKey":"identifier-quoting-strategy","configPhase":"BUILD_TIME","acceptedValues":["tooltip:none[No optimizer, resulting in a database call each and every time an identifier value is needed from the generator.\n\nNot recommended in production environments:\nmay result in degraded performance and/or frequent gaps in identifier values.]","`all`","`all-except-column-definitions`","`only-keywords`"],"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":true}},{"configDocKey":{"type":"boolean","key":"quarkus.hibernate-orm.second-level-caching-enabled","configDoc":"The default in Quarkus is for 2nd level caching to be enabled, and a good implementation is already integrated for you. \nJust cherry-pick which entities should be using the cache. \nSet this to false to disable all 2nd level caches.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"second-level-caching-enabled","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.hibernate-orm.validation.enabled","configDoc":"Enables the Bean Validation integration.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"enabled","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-orm.multitenant","configDoc":"Defines the method for multi-tenancy (DATABASE, NONE, SCHEMA). The complete list of allowed values is available in the\nhttps://javadoc.io/doc/org.hibernate/hibernate-core/5.6.10.Final/org/hibernate/MultiTenancyStrategy.html[Hibernate ORM\nJavaDoc].\nThe type DISCRIMINATOR is currently not supported. The default value is NONE (no multi-tenancy).","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"multitenant","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-orm.multitenant-schema-datasource","configDoc":"Defines the name of the datasource to use in case of SCHEMA approach. The datasource of the persistence unit will be used if not set.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"multitenant-schema-datasource","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.hibernate-orm.validate-in-dev-mode","configDoc":"If hibernate is not auto generating the schema, and Quarkus is running in development mode then Quarkus will attempt to validate the database after startup and print a log message if there are any problems.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"validate-in-dev-mode","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}},{"configDocSection":{"name":"quarkus.hibernate-orm.persistence-units","optional":false,"withinAMap":false,"sectionDetails":"= Additional named persistence units","sectionDetailsTitle":"Additional named persistence units","configPhase":"BUILD_TIME","topLevelGrouping":"quarkus.hibernate-orm","configGroupType":"io.quarkus.hibernate.orm.deployment.HibernateOrmConfigPersistenceUnit","showSection":true,"configDocItems":[{"configDocKey":{"type":"string","key":"quarkus.hibernate-orm.\"persistence-unit-name\".datasource","configDoc":"","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"datasource","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-orm.\"persistence-unit-name\".packages","configDoc":"","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"packages","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":true,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}},{"configDocSection":{"name":"quarkus.hibernate-orm.\"persistence-unit-name\".dialect","optional":false,"withinAMap":true,"sectionDetails":"== Dialect related configuration","sectionDetailsTitle":"Dialect related configuration","configPhase":"BUILD_TIME","topLevelGrouping":"quarkus.hibernate-orm","configGroupType":"io.quarkus.hibernate.orm.deployment.HibernateOrmConfigPersistenceUnit.HibernateOrmConfigPersistenceUnitDialect","showSection":true,"configDocItems":[{"configDocKey":{"type":"string","key":"quarkus.hibernate-orm.\"persistence-unit-name\".dialect","configDoc":"Class name of the Hibernate ORM dialect.\n\nThe complete list of bundled dialects is available in the\nhttps://docs.jboss.org/hibernate/stable/orm/javadocs/org/hibernate/dialect/package-summary.html[Hibernate ORM\nJavaDoc].\n\nSetting the dialect directly is only recommended as a last resort:\nmost popular databases have a corresponding Quarkus extension,\nallowing Quarkus to select the dialect automatically,\nin which case you do not need to set the dialect at all,\nthough you may want to set\nxref:datasource.adoc#quarkus-datasource_quarkus.datasource.db-version[`quarkus.datasource.db-version`] as\nhigh as possible\nto benefit from the best performance and latest features.\n\nIf your database does not have a corresponding Quarkus extension,\nyou will need to set the dialect directly.\nIn that case, keep in mind that the JDBC driver and Hibernate ORM dialect\nmay not work properly in GraalVM native executables.","withinAMap":true,"defaultValue":"selected automatically for most popular databases","javaDocSiteLink":"","docMapKey":"dialect","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-orm.\"persistence-unit-name\".dialect.storage-engine","configDoc":"The storage engine to use when the dialect supports multiple storage engines.\n\nE.g. `MyISAM` or `InnoDB` for MySQL.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"storage-engine","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}}],"anchorPrefix":null}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-orm.\"persistence-unit-name\".sql-load-script","configDoc":"Path to a file containing the SQL statements to execute when Hibernate ORM starts.\n\nThe file is retrieved from the classpath resources,\nso it must be located in the resources directory (e.g. `src/main/resources`).\n\nThe default value for this setting differs depending on the Quarkus launch mode:\n\n* In dev and test modes, it defaults to `import.sql`.\n  Simply add an `import.sql` file in the root of your resources directory\n  and it will be picked up without having to set this property.\n  Pass `no-file` to force Hibernate ORM to ignore the SQL import file.\n* In production mode, it defaults to `no-file`.\n  It means Hibernate ORM won't try to execute any SQL import file by default.\n  Pass an explicit value to force Hibernate ORM to execute the SQL import file.\n\nIf you need different SQL statements between dev mode, test (`@QuarkusTest`) and in production, use Quarkus\nhttps://quarkus.io/guides/config#configuration-profiles[configuration profiles facility].\n\n[source,property]\n.application.properties\n----\n%dev.quarkus.hibernate-orm.sql-load-script = import-dev.sql\n%test.quarkus.hibernate-orm.sql-load-script = import-test.sql\n%prod.quarkus.hibernate-orm.sql-load-script = no-file\n----\n\n[NOTE]\n====\nQuarkus supports `.sql` file with SQL statements or comments spread over multiple lines.\nEach SQL statement must be terminated by a semicolon.\n====","withinAMap":true,"defaultValue":"import.sql in DEV, TEST ; no-file otherwise","javaDocSiteLink":"","docMapKey":"sql-load-script","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":true,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-orm.\"persistence-unit-name\".physical-naming-strategy","configDoc":"Pluggable strategy contract for applying physical naming rules for database object names. Class name of the Hibernate PhysicalNamingStrategy implementation","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"physical-naming-strategy","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-orm.\"persistence-unit-name\".implicit-naming-strategy","configDoc":"Pluggable strategy for applying implicit naming rules when an explicit name is not given. Class name of the Hibernate ImplicitNamingStrategy implementation","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"implicit-naming-strategy","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-orm.\"persistence-unit-name\".metadata-builder-contributor","configDoc":"Class name of a custom\nhttps://docs.jboss.org/hibernate/stable/orm/javadocs/org/hibernate/boot/spi/MetadataBuilderContributor.html[`org.hibernate.boot.spi.MetadataBuilderContributor`]\nimplementation.\n\n[NOTE]\n====\nNot all customization options exposed by\nhttps://docs.jboss.org/hibernate/stable/orm/javadocs/org/hibernate/boot/MetadataBuilder.html[`org.hibernate.boot.MetadataBuilder`]\nwill work correctly. Stay clear of options related to classpath scanning in particular.\n\nThis setting is exposed mainly to allow registration of types, converters and SQL functions.\n====","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"metadata-builder-contributor","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-orm.\"persistence-unit-name\".mapping-files","configDoc":"XML files to configure the entity mapping, e.g. `META-INF/my-orm.xml`. \nDefaults to `META-INF/orm.xml` if it exists. Pass `no-file` to force Hibernate ORM to ignore `META-INF/orm.xml`.","withinAMap":true,"defaultValue":"META-INF/orm.xml if it exists; no-file otherwise","javaDocSiteLink":"","docMapKey":"mapping-files","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":true,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}},{"configDocSection":{"name":"quarkus.hibernate-orm.\"persistence-unit-name\".mapping","optional":false,"withinAMap":true,"sectionDetails":"== Mapping configuration","sectionDetailsTitle":"Mapping configuration","configPhase":"BUILD_TIME","topLevelGrouping":"quarkus.hibernate-orm","configGroupType":"io.quarkus.hibernate.orm.deployment.HibernateOrmConfigPersistenceUnit.HibernateOrmConfigPersistenceUnitMapping","showSection":true,"configDocItems":[{"configDocKey":{"type":"org.hibernate.annotations.TimeZoneStorageType","key":"quarkus.hibernate-orm.\"persistence-unit-name\".mapping.timezone.default-storage","configDoc":"How to store timezones in the database by default\nfor properties of type `OffsetDateTime` and `ZonedDateTime`.\n\nThis default may be overridden on a per-property basis using `@TimeZoneStorage`.\n\nNOTE: Properties of type `OffsetTime` are https://hibernate.atlassian.net/browse/HHH-16287[not affected by this\nsetting].\n\n`default`::\nEquivalent to `native` if supported, `normalize-utc` otherwise.\n`auto`::\nEquivalent to `native` if supported, `column` otherwise.\n`native`::\nStores the timestamp and timezone in a column of type `timestamp with time zone`.\n+\nOnly available on some databases/dialects;\nif not supported, an exception will be thrown during static initialization.\n`column`::\nStores the timezone in a separate column next to the timestamp column.\n+\nUse `@TimeZoneColumn` on the relevant entity property to customize the timezone column.\n`normalize-utc`::\nDoes not store the timezone, and loses timezone information upon persisting.\n+\nInstead, normalizes the value to a timestamp in the UTC timezone.\n`normalize`::\nDoes not store the timezone, and loses timezone information upon persisting.\n+\nInstead, normalizes the value:\n* upon persisting to the database, to a timestamp in the JDBC timezone\nset through `quarkus.hibernate-orm.jdbc.timezone`,\nor the JVM default timezone if not set.\n* upon reading back from the database, to the JVM default timezone.\n+\nUse this to get the legacy behavior of Quarkus 2 / Hibernate ORM 5 or older.","withinAMap":true,"defaultValue":"default","javaDocSiteLink":"","docMapKey":"time-zone-default-storage","configPhase":"BUILD_TIME","acceptedValues":["`native`","`normalize`","`normalize-utc`","`column`","`auto`","`default`"],"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":true}},{"configDocKey":{"type":"io.quarkus.hibernate.orm.deployment.HibernateOrmConfigPersistenceUnit.IdOptimizerType","key":"quarkus.hibernate-orm.\"persistence-unit-name\".mapping.id.optimizer.default","configDoc":"The optimizer to apply to identifier generators\nwhose optimizer is not configured explicitly.\n\nOnly relevant for table- and sequence-based identifier generators.\nOther generators, such as UUID-based generators, will ignore this setting.\n\nThe optimizer is responsible for pooling new identifier values,\nin order to reduce the frequency of database calls to retrieve those values\nand thereby improve performance.","withinAMap":true,"defaultValue":"pooled-lo","javaDocSiteLink":"","docMapKey":"id-optimizer-default","configPhase":"BUILD_TIME","acceptedValues":["`pooled-lo`","`pooled`","`none`"],"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":true}}],"anchorPrefix":null}},{"configDocSection":{"name":"quarkus.hibernate-orm.\"persistence-unit-name\".query","optional":false,"withinAMap":true,"sectionDetails":"== Query related configuration","sectionDetailsTitle":"Query related configuration","configPhase":"BUILD_TIME","topLevelGrouping":"quarkus.hibernate-orm","configGroupType":"io.quarkus.hibernate.orm.deployment.HibernateOrmConfigPersistenceUnit.HibernateOrmConfigPersistenceUnitQuery","showSection":true,"configDocItems":[{"configDocKey":{"type":"int","key":"quarkus.hibernate-orm.\"persistence-unit-name\".query.query-plan-cache-max-size","configDoc":"The maximum size of the query plan cache. see ++#++`org.hibernate.cfg.AvailableSettings++#++QUERY_PLAN_CACHE_MAX_SIZE`","withinAMap":true,"defaultValue":"2048","javaDocSiteLink":"","docMapKey":"query-plan-cache-max-size","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}},{"configDocKey":{"type":"io.quarkus.hibernate.orm.deployment.HibernateOrmConfigPersistenceUnit.HibernateOrmConfigPersistenceUnitQuery.NullOrdering","key":"quarkus.hibernate-orm.\"persistence-unit-name\".query.default-null-ordering","configDoc":"Default precedence of null values in `ORDER BY` clauses.\n\nValid values are: `none`, `first`, `last`.","withinAMap":true,"defaultValue":"none","javaDocSiteLink":"","docMapKey":"default-null-ordering","configPhase":"BUILD_TIME","acceptedValues":["`none`","`first`","`last`"],"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":true}},{"configDocKey":{"type":"boolean","key":"quarkus.hibernate-orm.\"persistence-unit-name\".query.in-clause-parameter-padding","configDoc":"Enables IN clause parameter padding which improves statement caching.","withinAMap":true,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"in-clause-parameter-padding","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}}],"anchorPrefix":null}},{"configDocSection":{"name":"quarkus.hibernate-orm.\"persistence-unit-name\".database","optional":false,"withinAMap":true,"sectionDetails":"== Database related configuration","sectionDetailsTitle":"Database related configuration","configPhase":"BUILD_TIME","topLevelGrouping":"quarkus.hibernate-orm","configGroupType":"io.quarkus.hibernate.orm.deployment.HibernateOrmConfigPersistenceUnit.HibernateOrmConfigPersistenceUnitDatabase","showSection":true,"configDocItems":[{"configDocKey":{"type":"java.nio.charset.Charset","key":"quarkus.hibernate-orm.\"persistence-unit-name\".database.charset","configDoc":"The charset of the database. \nUsed for DDL generation and also for the SQL import scripts.","withinAMap":true,"defaultValue":"UTF-8","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/nio/charset/Charset.html","docMapKey":"charset","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}}],"anchorPrefix":null}},{"configDocSection":{"name":"quarkus.hibernate-orm.\"persistence-unit-name\".jdbc","optional":false,"withinAMap":true,"sectionDetails":"== JDBC related configuration","sectionDetailsTitle":"JDBC related configuration","configPhase":"BUILD_TIME","topLevelGrouping":"quarkus.hibernate-orm","configGroupType":"io.quarkus.hibernate.orm.deployment.HibernateOrmConfigPersistenceUnit.HibernateOrmConfigPersistenceUnitJdbc","showSection":true,"configDocItems":[{"configDocKey":{"type":"string","key":"quarkus.hibernate-orm.\"persistence-unit-name\".jdbc.timezone","configDoc":"The time zone pushed to the JDBC driver. See `quarkus.hibernate-orm.mapping.timezone.default-storage`.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"timezone","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}},{"configDocKey":{"type":"java.lang.Integer","key":"quarkus.hibernate-orm.\"persistence-unit-name\".jdbc.statement-fetch-size","configDoc":"How many rows are fetched at a time by the JDBC driver.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"statement-fetch-size","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}},{"configDocKey":{"type":"java.lang.Integer","key":"quarkus.hibernate-orm.\"persistence-unit-name\".jdbc.statement-batch-size","configDoc":"The number of updates (inserts, updates and deletes) that are sent by the JDBC driver at one time for execution.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"statement-batch-size","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}}],"anchorPrefix":null}},{"configDocSection":{"name":"quarkus.hibernate-orm.\"persistence-unit-name\".fetch","optional":false,"withinAMap":true,"sectionDetails":"== Fetching logic configuration","sectionDetailsTitle":"Fetching logic configuration","configPhase":"BUILD_TIME","topLevelGrouping":"quarkus.hibernate-orm","configGroupType":"io.quarkus.hibernate.orm.deployment.HibernateOrmConfigPersistenceUnit.HibernateOrmConfigPersistenceUnitFetch","showSection":true,"configDocItems":[{"configDocKey":{"type":"java.lang.Integer","key":"quarkus.hibernate-orm.\"persistence-unit-name\".fetch.batch-size","configDoc":"The size of the batches used when loading entities and collections.\n\n`-1` means batch loading is disabled.","withinAMap":true,"defaultValue":"16","javaDocSiteLink":"","docMapKey":"batch-size","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}},{"configDocKey":{"type":"java.lang.Integer","key":"quarkus.hibernate-orm.\"persistence-unit-name\".fetch.max-depth","configDoc":"The maximum depth of outer join fetch tree for single-ended associations (one-to-one, many-to-one).\n\nA `0` disables default outer join fetching.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"max-depth","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}}],"anchorPrefix":null}},{"configDocSection":{"name":"quarkus.hibernate-orm.\"persistence-unit-name\".cache","optional":false,"withinAMap":true,"sectionDetails":"== Caching configuration","sectionDetailsTitle":"Caching configuration","configPhase":"BUILD_TIME","topLevelGrouping":"quarkus.hibernate-orm","configGroupType":"io.quarkus.hibernate.orm.deployment.HibernateOrmConfigPersistenceUnit.HibernateOrmConfigPersistenceUnitCache","showSection":true,"configDocItems":[{"configDocKey":{"type":"java.time.Duration","key":"quarkus.hibernate-orm.\"persistence-unit-name\".cache.\"cache\".expiration.max-idle","configDoc":"The maximum time before an object of the cache is considered expired.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"max-idle","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}},{"configDocKey":{"type":"java.lang.Long","key":"quarkus.hibernate-orm.\"persistence-unit-name\".cache.\"cache\".memory.object-count","configDoc":"The maximum number of objects kept in memory in the cache.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"object-count","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}}],"anchorPrefix":null}},{"configDocSection":{"name":"quarkus.hibernate-orm.\"persistence-unit-name\".discriminator","optional":false,"withinAMap":true,"sectionDetails":"== Discriminator related configuration","sectionDetailsTitle":"Discriminator related configuration","configPhase":"BUILD_TIME","topLevelGrouping":"quarkus.hibernate-orm","configGroupType":"io.quarkus.hibernate.orm.deployment.HibernateOrmConfigPersistenceUnit.HibernateOrmConfigPersistenceUnitDiscriminator","showSection":true,"configDocItems":[{"configDocKey":{"type":"boolean","key":"quarkus.hibernate-orm.\"persistence-unit-name\".discriminator.ignore-explicit-for-joined","configDoc":"Existing applications rely (implicitly or explicitly) on Hibernate ignoring any DiscriminatorColumn declarations on joined inheritance hierarchies. This setting allows these applications to maintain the legacy behavior of DiscriminatorColumn annotations being ignored when paired with joined inheritance.","withinAMap":true,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"ignore-explicit-for-joined","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}}],"anchorPrefix":null}},{"configDocKey":{"type":"io.quarkus.hibernate.orm.deployment.HibernateOrmConfigPersistenceUnit.IdentifierQuotingStrategy","key":"quarkus.hibernate-orm.\"persistence-unit-name\".quote-identifiers.strategy","configDoc":"Identifiers can be quoted using one of the available strategies. \nSet to `none` by default, meaning no identifiers will be quoted. If set to `all`, all identifiers and column definitions will be quoted. Additionally, setting it to `all-except-column-definitions` will skip the column definitions, which can usually be required when they exist, or else use the option `only-keywords` to quote only identifiers deemed SQL keywords by the Hibernate ORM dialect.","withinAMap":true,"defaultValue":"none","javaDocSiteLink":"","docMapKey":"identifier-quoting-strategy","configPhase":"BUILD_TIME","acceptedValues":["tooltip:none[No optimizer, resulting in a database call each and every time an identifier value is needed from the generator.\n\nNot recommended in production environments:\nmay result in degraded performance and/or frequent gaps in identifier values.]","`all`","`all-except-column-definitions`","`only-keywords`"],"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":true}},{"configDocKey":{"type":"boolean","key":"quarkus.hibernate-orm.\"persistence-unit-name\".second-level-caching-enabled","configDoc":"The default in Quarkus is for 2nd level caching to be enabled, and a good implementation is already integrated for you. \nJust cherry-pick which entities should be using the cache. \nSet this to false to disable all 2nd level caches.","withinAMap":true,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"second-level-caching-enabled","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.hibernate-orm.\"persistence-unit-name\".validation.enabled","configDoc":"Enables the Bean Validation integration.","withinAMap":true,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"enabled","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-orm.\"persistence-unit-name\".multitenant","configDoc":"Defines the method for multi-tenancy (DATABASE, NONE, SCHEMA). The complete list of allowed values is available in the\nhttps://javadoc.io/doc/org.hibernate/hibernate-core/5.6.10.Final/org/hibernate/MultiTenancyStrategy.html[Hibernate ORM\nJavaDoc].\nThe type DISCRIMINATOR is currently not supported. The default value is NONE (no multi-tenancy).","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"multitenant","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-orm.\"persistence-unit-name\".multitenant-schema-datasource","configDoc":"Defines the name of the datasource to use in case of SCHEMA approach. The datasource of the persistence unit will be used if not set.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"multitenant-schema-datasource","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.hibernate-orm.\"persistence-unit-name\".validate-in-dev-mode","configDoc":"If hibernate is not auto generating the schema, and Quarkus is running in development mode then Quarkus will attempt to validate the database after startup and print a log message if there are any problems.","withinAMap":true,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"validate-in-dev-mode","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}}],"anchorPrefix":null}},{"configDocKey":{"type":"boolean","key":"quarkus.hibernate-orm.persistence-xml.ignore","configDoc":"If `true`, Quarkus will ignore any `persistence.xml` file in the classpath and rely exclusively on the Quarkus configuration.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"ignore","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}},{"configDocSection":{"name":"quarkus.hibernate-orm.log","optional":false,"withinAMap":false,"sectionDetails":"= Logging configuration","sectionDetailsTitle":"Logging configuration","configPhase":"BUILD_TIME","topLevelGrouping":"quarkus.hibernate-orm","configGroupType":"io.quarkus.hibernate.orm.deployment.HibernateOrmConfig.HibernateOrmConfigLog","showSection":true,"configDocItems":[{"configDocKey":{"type":"boolean","key":"quarkus.hibernate-orm.log.bind-parameters","configDoc":"Logs SQL bind parameters. \nSetting it to true is obviously not recommended in production.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"bind-parameters","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}}],"anchorPrefix":null}},{"configDocKey":{"type":"java.lang.Boolean","key":"quarkus.hibernate-orm.statistics","configDoc":"Whether statistics collection is enabled. If 'metrics.enabled' is true, then the default here is considered true, otherwise the default is false.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"statistics","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}},{"configDocKey":{"type":"java.lang.Boolean","key":"quarkus.hibernate-orm.log-session-metrics","configDoc":"Whether session metrics should be appended into the server log for each Hibernate session. This only has effect if statistics are enabled (`quarkus.hibernate-orm.statistics`). The default is false (which means both `statistics` and `log-session-metrics` need to be enabled for the session metrics to appear in the log).","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"log-session-metrics","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.hibernate-orm.metrics.enabled","configDoc":"Whether metrics are published if a metrics extension is enabled.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"metrics-enabled","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.hibernate-orm","enum":false}}]