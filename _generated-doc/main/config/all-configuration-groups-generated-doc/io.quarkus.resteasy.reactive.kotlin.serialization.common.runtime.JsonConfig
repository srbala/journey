[{"configDocKey":{"type":"boolean","key":".allow-special-floating-point-values","configDoc":"Removes JSON specification restriction on special floating-point values such as `NaN` and `Infinity` and enables their serialization and deserialization. When enabling it, please ensure that the receiving party will be able to encode and decode these special values.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"allow-special-floating-point-values","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"boolean","key":".allow-structured-map-keys","configDoc":"Enables structured objects to be serialized as map keys by changing serialized form of the map from JSON object (key-value pairs) to flat array like `++[++k1, v1, k2, v2++]++`.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"allow-structured-map-keys","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"string","key":".class-discriminator","configDoc":"Name of the class descriptor property for polymorphic serialization.","withinAMap":false,"defaultValue":"type","javaDocSiteLink":"","docMapKey":"class-discriminator","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"boolean","key":".coerce-input-values","configDoc":"Enables coercing incorrect JSON values to the default property value in the following cases: 1. JSON value is `null` but property type is non-nullable. 2. Property type is an enum type, but JSON value contains unknown enum member.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"coerce-input-values","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"boolean","key":".encode-defaults","configDoc":"Specifies whether default values of Kotlin properties should be encoded.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"encode-defaults","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"boolean","key":".explicit-nulls","configDoc":"Specifies whether `null` values should be encoded for nullable properties and must be present in JSON object during decoding. \nWhen this flag is disabled properties with `null` values without default are not encoded; during decoding, the absence of a field value is treated as `null` for nullable properties without a default value. \n`true` by default.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"explicit-nulls","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"boolean","key":".ignore-unknown-keys","configDoc":"Specifies whether encounters of unknown properties in the input JSON should be ignored instead of throwing ++[++SerializationException++]++.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"ignore-unknown-keys","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"boolean","key":".is-lenient","configDoc":"Removes JSON specification restriction (RFC-4627) and makes parser more liberal to the malformed input. In lenient mode quoted boolean literals, and unquoted string literals are allowed. \nIts relaxations can be expanded in the future, so that lenient parser becomes even more permissive to invalid value in the input, replacing them with defaults.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"is-lenient","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"boolean","key":".pretty-print","configDoc":"Specifies whether resulting JSON should be pretty-printed.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"pretty-print","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"string","key":".pretty-print-indent","configDoc":"Specifies indent string to use with ++[++prettyPrint++]++ mode","withinAMap":false,"defaultValue":"    ","javaDocSiteLink":"","docMapKey":"pretty-print-indent","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"boolean","key":".use-alternative-names","configDoc":"Specifies whether Json instance makes use of ++[++JsonNames++]++ annotation. \nDisabling this flag when one does not use ++[++JsonNames++]++ at all may sometimes result in better performance, particularly when a large count of fields is skipped with ++[++ignoreUnknownKeys++]++.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"use-alternative-names","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"boolean","key":".use-array-polymorphism","configDoc":"Switches polymorphic serialization to the default array format. This is an option for legacy JSON format and should not be generally used.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"use-array-polymorphism","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"string","key":".naming-strategy","configDoc":"Specifies the `JsonNamingStrategy` that should be used for all properties in classes for serialization and deserialization. This strategy is applied for all entities that have `StructureKind.CLASS`. \n\n`null` by default. \n\nThis element can be one of two things:  \n . the fully qualified class name of a type implements the `NamingStrategy` interface and has a no-arg constructor \n - a value in the form `NamingStrategy.SnakeCase` which refers to built-in values provided by the kotlin serialization library itself.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"naming-strategy","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}}]