[{"configDocKey":{"type":"string","key":".auth-server-url","configDoc":"The base URL of the OpenID Connect (OIDC) server, for example, `https://host:port/auth`. OIDC discovery endpoint will be called by default by appending a '.well-known/openid-configuration' path to this URL. Note if you work with Keycloak OIDC server, make sure the base URL is in the following format: `https://host:port/realms/++{++realm++}++` where `++{++realm++}++` has to be replaced by the name of the Keycloak realm.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"auth-server-url","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"java.lang.Boolean","key":".discovery-enabled","configDoc":"Enables OIDC discovery. If the discovery is disabled then the OIDC endpoint URLs must be configured individually.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"discovery-enabled","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"string","key":".token-path","configDoc":"Relative path or absolute URL of the OIDC token endpoint which issues access and refresh tokens.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"token-path","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"string","key":".revoke-path","configDoc":"Relative path or absolute URL of the OIDC token revocation endpoint.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"revoke-path","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"string","key":".client-id","configDoc":"The client-id of the application. Each application has a client-id that is used to identify the application","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"client-id","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"java.time.Duration","key":".connection-delay","configDoc":"The maximum amount of time connecting to the currently unavailable OIDC server will be attempted for. The number of times the connection request will be repeated is calculated by dividing the value of this property by 2. For example, setting it to `20S` will allow for requesting the connection up to 10 times with a 2 seconds delay between the retries. Note this property is only effective when the initial OIDC connection is created, for example, when requesting a well-known OIDC configuration. Use the 'connection-retry-count' property to support trying to re-establish an already available connection which may have been dropped.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"connection-delay","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"int","key":".connection-retry-count","configDoc":"The number of times an attempt to re-establish an already available connection will be repeated for. Note this property is different to the `connection-delay` property which is only effective during the initial OIDC connection creation. This property is used to try to recover the existing connection which may have been temporarily lost. For example, if a request to the OIDC token endpoint fails due to a connection exception then the request will be retried for a number of times configured by this property.","withinAMap":false,"defaultValue":"3","javaDocSiteLink":"","docMapKey":"connection-retry-count","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"java.time.Duration","key":".connection-timeout","configDoc":"The amount of time after which the current OIDC connection request will time out.","withinAMap":false,"defaultValue":"10S","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"connection-timeout","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"java.lang.Integer","key":".max-pool-size","configDoc":"The maximum size of the connection pool used by the WebClient","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"max-pool-size","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocSection":{"name":"","optional":false,"withinAMap":false,"sectionDetails":null,"sectionDetailsTitle":".credentials","configPhase":"BUILD_TIME","topLevelGrouping":"","configGroupType":"io.quarkus.oidc.common.runtime.OidcCommonConfig.Credentials","showSection":false,"configDocItems":[{"configDocKey":{"type":"string","key":".credentials.secret","configDoc":"Client secret which is used for a `client_secret_basic` authentication method. Note that a 'client-secret.value' can be used instead but both properties are mutually exclusive.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"secret","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"string","key":".credentials.client-secret.value","configDoc":"The client secret value - it will be ignored if 'secret.key' is set","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"value","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"string","key":".credentials.client-secret.provider.name","configDoc":"The CredentialsProvider name which should only be set if more than one CredentialsProvider is registered","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"name","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"string","key":".credentials.client-secret.provider.key","configDoc":"The CredentialsProvider client secret key","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"io.quarkus.oidc.common.runtime.OidcCommonConfig.Credentials.Secret.Method","key":".credentials.client-secret.method","configDoc":"Authentication method.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"method","configPhase":"BUILD_TIME","acceptedValues":["tooltip:basic[client_secret_basic (default): client id and secret are submitted with the HTTP Authorization Basic scheme]","tooltip:post[client_secret_post: client id and secret are submitted as the 'client_id' and 'client_secret' form parameters.]","tooltip:post-jwt[client_secret_jwt: client id and generated JWT secret are submitted as the 'client_id' and 'client_secret' form parameters.]"],"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":true}},{"configDocKey":{"type":"string","key":".credentials.jwt.secret","configDoc":"If provided, indicates that JWT is signed using a secret key","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"secret","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"string","key":".credentials.jwt.secret-provider.name","configDoc":"The CredentialsProvider name which should only be set if more than one CredentialsProvider is registered","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"name","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"string","key":".credentials.jwt.secret-provider.key","configDoc":"The CredentialsProvider client secret key","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"string","key":".credentials.jwt.key-file","configDoc":"If provided, indicates that JWT is signed using a private key in PEM or JWK format. You can use the `signature-algorithm` property to specify the key algorithm.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-file","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"string","key":".credentials.jwt.key-store-file","configDoc":"If provided, indicates that JWT is signed using a private key from a key store","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-file","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"string","key":".credentials.jwt.key-store-password","configDoc":"A parameter to specify the password of the key store file.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-password","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"string","key":".credentials.jwt.key-id","configDoc":"The private key id/alias","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-id","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"string","key":".credentials.jwt.key-password","configDoc":"The private key password","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-password","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"string","key":".credentials.jwt.audience","configDoc":"JWT audience ('aud') claim value. By default, the audience is set to the address of the OpenId Connect Provider's token endpoint.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"audience","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"string","key":".credentials.jwt.token-key-id","configDoc":"Key identifier of the signing key added as a JWT 'kid' header","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"token-key-id","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"string","key":".credentials.jwt.issuer","configDoc":"Issuer of the signing key added as a JWT 'iss' claim (default: client id)","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"issuer","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"string","key":".credentials.jwt.subject","configDoc":"Subject of the signing key added as a JWT 'sub' claim (default: client id)","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"subject","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"string","key":".credentials.jwt.signature-algorithm","configDoc":"Signature algorithm, also used for the `key-file` property. Supported values: RS256, RS384, RS512, PS256, PS384, PS512, ES256, ES384, ES512, HS256, HS384, HS512.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"signature-algorithm","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"int","key":".credentials.jwt.lifespan","configDoc":"JWT life-span in seconds. It will be added to the time it was issued at to calculate the expiration time.","withinAMap":false,"defaultValue":"10","javaDocSiteLink":"","docMapKey":"lifespan","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}}],"anchorPrefix":null}},{"configDocSection":{"name":"","optional":false,"withinAMap":false,"sectionDetails":null,"sectionDetailsTitle":".proxy","configPhase":"BUILD_TIME","topLevelGrouping":"","configGroupType":"io.quarkus.oidc.common.runtime.OidcCommonConfig.Proxy","showSection":false,"configDocItems":[{"configDocKey":{"type":"string","key":".proxy.host","configDoc":"The host (name or IP address) of the Proxy.\nNote: If OIDC adapter needs to use a Proxy to talk with OIDC server (Provider), then at least the \"host\" config item must be configured to enable the usage of a Proxy.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"host","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"int","key":".proxy.port","configDoc":"The port number of the Proxy. Default value is 80.","withinAMap":false,"defaultValue":"80","javaDocSiteLink":"","docMapKey":"port","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"string","key":".proxy.username","configDoc":"The username, if Proxy needs authentication.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"username","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"string","key":".proxy.password","configDoc":"The password, if Proxy needs authentication.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"password","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}}],"anchorPrefix":null}},{"configDocSection":{"name":"","optional":false,"withinAMap":false,"sectionDetails":null,"sectionDetailsTitle":".tls","configPhase":"BUILD_TIME","topLevelGrouping":"","configGroupType":"io.quarkus.oidc.common.runtime.OidcCommonConfig.Tls","showSection":false,"configDocItems":[{"configDocKey":{"type":"io.quarkus.oidc.common.runtime.OidcCommonConfig.Tls.Verification","key":".tls.verification","configDoc":"Certificate validation and hostname verification, which can be one of the following values from enum `Verification`. Default is required.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"verification","configPhase":"BUILD_TIME","acceptedValues":["tooltip:required[Certificates are validated and hostname verification is enabled. This is the default value.]","tooltip:certificate-validation[Certificates are validated but hostname verification is disabled.]","tooltip:none[All certificated are trusted and hostname verification is disabled.]"],"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":true}},{"configDocKey":{"type":"path","key":".tls.key-store-file","configDoc":"An optional key store which holds the certificate information instead of specifying separate files.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-file","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"string","key":".tls.key-store-file-type","configDoc":"An optional parameter to specify type of the key store file. If not given, the type is automatically detected based on the file name.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-file-type","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"string","key":".tls.key-store-provider","configDoc":"An optional parameter to specify a provider of the key store file. If not given, the provider is automatically detected based on the key store file type.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-provider","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"string","key":".tls.key-store-password","configDoc":"A parameter to specify the password of the key store file. If not given, the default (\"password\") is used.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-password","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"string","key":".tls.key-store-key-alias","configDoc":"An optional parameter to select a specific key in the key store. When SNI is disabled, if the key store contains multiple keys and no alias is specified, the behavior is undefined.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-key-alias","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"string","key":".tls.key-store-key-password","configDoc":"An optional parameter to define the password for the key, in case it's different from `key-store-password`.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-key-password","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"path","key":".tls.trust-store-file","configDoc":"An optional trust store which holds the certificate information of the certificates to trust","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-file","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"string","key":".tls.trust-store-password","configDoc":"A parameter to specify the password of the trust store file.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-password","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"string","key":".tls.trust-store-cert-alias","configDoc":"A parameter to specify the alias of the trust store certificate.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-cert-alias","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"string","key":".tls.trust-store-file-type","configDoc":"An optional parameter to specify type of the trust store file. If not given, the type is automatically detected based on the file name.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-file-type","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}},{"configDocKey":{"type":"string","key":".tls.trust-store-provider","configDoc":"An optional parameter to specify a provider of the trust store file. If not given, the provider is automatically detected based on the trust store file type.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-provider","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":false}}],"anchorPrefix":null}}]