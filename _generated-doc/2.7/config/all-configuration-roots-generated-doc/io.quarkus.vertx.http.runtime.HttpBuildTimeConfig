[{"configDocKey":{"type":"string","key":"quarkus.http.root-path","configDoc":"The HTTP root path. All web content will be served relative to this root path.","withinAMap":false,"defaultValue":"/","javaDocSiteLink":"","docMapKey":"root-path","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.http"}},{"configDocKey":{"type":"java.lang.Boolean","key":"quarkus.http.auth.basic","configDoc":"If basic auth should be enabled. If both basic and form auth is enabled then basic auth will be enabled in silent mode. If no authentication mechanisms are configured basic auth is the default.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"basic","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http"}},{"configDocKey":{"type":"boolean","key":"quarkus.http.auth.form.enabled","configDoc":"If form authentication is enabled","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"enabled","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http"}},{"configDocKey":{"type":"string","key":"quarkus.http.auth.form.login-page","configDoc":"The login page","withinAMap":false,"defaultValue":"/login.html","javaDocSiteLink":"","docMapKey":"login-page","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http"}},{"configDocKey":{"type":"string","key":"quarkus.http.auth.form.post-location","configDoc":"The post location.","withinAMap":false,"defaultValue":"/j_security_check","javaDocSiteLink":"","docMapKey":"post-location","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http"}},{"configDocKey":{"type":"string","key":"quarkus.http.auth.form.username-parameter","configDoc":"The username field name.","withinAMap":false,"defaultValue":"j_username","javaDocSiteLink":"","docMapKey":"username-parameter","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http"}},{"configDocKey":{"type":"string","key":"quarkus.http.auth.form.password-parameter","configDoc":"The password field name.","withinAMap":false,"defaultValue":"j_password","javaDocSiteLink":"","docMapKey":"password-parameter","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http"}},{"configDocKey":{"type":"string","key":"quarkus.http.auth.form.error-page","configDoc":"The error page","withinAMap":false,"defaultValue":"/error.html","javaDocSiteLink":"","docMapKey":"error-page","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http"}},{"configDocKey":{"type":"string","key":"quarkus.http.auth.form.landing-page","configDoc":"The landing page to redirect to if there is no saved page to redirect back to","withinAMap":false,"defaultValue":"/index.html","javaDocSiteLink":"","docMapKey":"landing-page","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http"}},{"configDocKey":{"type":"boolean","key":"quarkus.http.auth.form.redirect-after-login","configDoc":"Option to disable redirect to landingPage if there is no saved page to redirect back to. Form Auth POST is followed by redirect to landingPage by default.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"redirect-after-login","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http"}},{"configDocKey":{"type":"string","key":"quarkus.http.auth.form.location-cookie","configDoc":"Option to control the name of the cookie used to redirect the user back to where he want to get access to.","withinAMap":false,"defaultValue":"quarkus-redirect-location","javaDocSiteLink":"","docMapKey":"location-cookie","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http"}},{"configDocKey":{"type":"java.time.Duration","key":"quarkus.http.auth.form.timeout","configDoc":"The inactivity (idle) timeout When inactivity timeout is reached, cookie is not renewed and a new login is enforced.","withinAMap":false,"defaultValue":"PT30M","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"timeout","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http"}},{"configDocKey":{"type":"java.time.Duration","key":"quarkus.http.auth.form.new-cookie-interval","configDoc":"How old a cookie can get before it will be replaced with a new cookie with an updated timeout, also referred to as \"renewal-timeout\". Note that smaller values will result in slightly more server load (as new encrypted cookies will be generated more often), however larger values affect the inactivity timeout as the timeout is set when a cookie is generated. For example if this is set to 10 minutes, and the inactivity timeout is 30m, if a users last request is when the cookie is 9m old then the actual timeout will happen 21m after the last request, as the timeout is only refreshed when a new cookie is generated. In other words no timeout is tracked on the server side; the timestamp is encoded and encrypted in the cookie itself and it is decrypted and parsed with each request.","withinAMap":false,"defaultValue":"PT1M","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"new-cookie-interval","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http"}},{"configDocKey":{"type":"string","key":"quarkus.http.auth.form.cookie-name","configDoc":"The cookie that is used to store the persistent session","withinAMap":false,"defaultValue":"quarkus-credential","javaDocSiteLink":"","docMapKey":"cookie-name","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http"}},{"configDocKey":{"type":"string","key":"quarkus.http.auth.realm","configDoc":"The authentication realm","withinAMap":false,"defaultValue":"Quarkus","javaDocSiteLink":"","docMapKey":"realm","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http"}},{"configDocKey":{"type":"java.lang.Boolean","key":"quarkus.http.auth.permission.\"permissions\".enabled","configDoc":"Determines whether the entire permission set is enabled, or not. By default, if the permission set is defined, it is enabled.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"enabled","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http"}},{"configDocKey":{"type":"string","key":"quarkus.http.auth.permission.\"permissions\".policy","configDoc":"The HTTP policy that this permission set is linked to. There are 3 built in policies: permit, deny and authenticated. Role based policies can be defined, and extensions can add their own policies.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"policy","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http"}},{"configDocKey":{"type":"string","key":"quarkus.http.auth.permission.\"permissions\".methods","configDoc":"The methods that this permission set applies to. If this is not set then they apply to all methods. Note that if a request matches any path from any permission set, but does not match the constraint due to the method not being listed then the request will be denied. Method specific permissions take precedence over matches that do not have any methods set. This means that for example if Quarkus is configured to allow GET and POST requests to /admin to and no other permissions are configured PUT requests to /admin will be denied.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"methods","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":true,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http"}},{"configDocKey":{"type":"string","key":"quarkus.http.auth.permission.\"permissions\".paths","configDoc":"The paths that this permission check applies to. If the path ends in /++*++ then this is treated as a path prefix, otherwise it is treated as an exact match. Matches are done on a length basis, so the most specific path match takes precedence. If multiple permission sets match the same path then explicit methods matches take precedence over over matches without methods set, otherwise the most restrictive permissions are applied.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"paths","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":true,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http"}},{"configDocKey":{"type":"string","key":"quarkus.http.auth.permission.\"permissions\".auth-mechanism","configDoc":"Path specific authentication mechanism which must be used to authenticate a user. It needs to match `HttpCredentialTransport` authentication scheme such as 'basic', 'bearer', 'form', etc.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"auth-mechanism","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http"}},{"configDocKey":{"type":"string","key":"quarkus.http.auth.policy.\"role-policy\".roles-allowed","configDoc":"The roles that are allowed to access resources protected by this policy","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"roles-allowed","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":true,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http"}},{"configDocKey":{"type":"boolean","key":"quarkus.http.auth.proactive","configDoc":"If this is true and credentials are present then a user will always be authenticated before the request progresses. If this is false then an attempt will only be made to authenticate the user if a permission check is performed or the current user is required for some other reason.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"proactive","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http"}},{"configDocKey":{"type":"io.vertx.core.http.ClientAuth","key":"quarkus.http.ssl.client-auth","configDoc":"Configures the engine to require/request client authentication. NONE, REQUEST, REQUIRED","withinAMap":false,"defaultValue":"none","javaDocSiteLink":"https://vertx.io/docs/apidocs/io/vertx/core/http/ClientAuth.html","docMapKey":"tls-client-auth","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":["none","request","required"],"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.http"}},{"configDocKey":{"type":"boolean","key":"quarkus.http.virtual","configDoc":"If this is true then only a virtual channel will be set up for vertx web. We have this switch for testing purposes.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"virtual","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.http"}},{"configDocKey":{"type":"string","key":"quarkus.http.non-application-root-path","configDoc":"A common root path for non-application endpoints. Various extension-provided endpoints such as metrics, health,\nand openapi are deployed under this path by default.\n\n* Relative path (Default, `q`) ->\nNon-application endpoints will be served from\n`${quarkus.http.root-path}/${quarkus.http.non-application-root-path}`.\n* Absolute path (`/q`) ->\nNon-application endpoints will be served from the specified path.\n* `${quarkus.http.root-path}` -> Setting this path to the same value as HTTP root path disables\nthis root path. All extension-provided endpoints will be served from `${quarkus.http.root-path}`.","withinAMap":false,"defaultValue":"q","javaDocSiteLink":"","docMapKey":"non-application-root-path","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.http"}},{"configDocKey":{"type":"java.time.Duration","key":"quarkus.http.test-timeout","configDoc":"The REST Assured client timeout for testing.","withinAMap":false,"defaultValue":"30S","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"test-timeout","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.http"}}]