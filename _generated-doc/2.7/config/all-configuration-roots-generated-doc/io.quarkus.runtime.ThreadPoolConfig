[{"configDocKey":{"type":"int","key":"quarkus.thread-pool.core-threads","configDoc":"The core thread pool size. This number of threads will always be kept alive.","withinAMap":false,"defaultValue":"1","javaDocSiteLink":"","docMapKey":"core-threads","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.thread-pool"}},{"configDocKey":{"type":"boolean","key":"quarkus.thread-pool.prefill","configDoc":"Prefill core thread pool. The core thread pool will be initialised with the core number of threads at startup","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"prefill","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.thread-pool"}},{"configDocKey":{"type":"java.lang.Integer","key":"quarkus.thread-pool.max-threads","configDoc":"The maximum number of threads. If this is not specified then it will be automatically sized to the greater of 8 ++*++ the number of available processors and 200. For example if there are 4 processors the max threads will be 200. If there are 48 processors it will be 384.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"max-threads","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.thread-pool"}},{"configDocKey":{"type":"java.lang.Integer","key":"quarkus.thread-pool.queue-size","configDoc":"The queue size. For most applications this should be unbounded","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"queue-size","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.thread-pool"}},{"configDocKey":{"type":"float","key":"quarkus.thread-pool.growth-resistance","configDoc":"The executor growth resistance. A resistance factor applied after the core pool is full; values applied here will cause that fraction of submissions to create new threads when no idle thread is available. A value of `0.0f` implies that threads beyond the core size should be created as aggressively as threads within it; a value of `1.0f` implies that threads beyond the core size should never be created.","withinAMap":false,"defaultValue":"0f","javaDocSiteLink":"","docMapKey":"growth-resistance","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.thread-pool"}},{"configDocKey":{"type":"java.time.Duration","key":"quarkus.thread-pool.shutdown-timeout","configDoc":"The shutdown timeout. If all pending work has not been completed by this time then additional threads will be spawned to attempt to finish any pending tasks, and the shutdown process will continue","withinAMap":false,"defaultValue":"1M","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"shutdown-timeout","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.thread-pool"}},{"configDocKey":{"type":"java.time.Duration","key":"quarkus.thread-pool.shutdown-interrupt","configDoc":"The amount of time to wait for thread pool shutdown before tasks should be interrupted. If this value is greater than or equal to the value for `shutdown-timeout`, then tasks will not be interrupted before the shutdown timeout occurs.","withinAMap":false,"defaultValue":"10S","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"shutdown-interrupt","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.thread-pool"}},{"configDocKey":{"type":"java.time.Duration","key":"quarkus.thread-pool.shutdown-check-interval","configDoc":"The frequency at which the status of the thread pool should be checked during shutdown. Information about waiting tasks and threads will be checked and possibly logged at this interval. Setting this key to an empty value disables the shutdown check interval.","withinAMap":false,"defaultValue":"5","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"shutdown-check-interval","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.thread-pool"}},{"configDocKey":{"type":"java.time.Duration","key":"quarkus.thread-pool.keep-alive-time","configDoc":"The amount of time a thread will stay alive with no work.","withinAMap":false,"defaultValue":"30S","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"keep-alive-time","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.thread-pool"}}]