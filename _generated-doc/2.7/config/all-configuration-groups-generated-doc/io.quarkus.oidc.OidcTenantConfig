[{"configDocKey":{"type":"string","key":".auth-server-url","configDoc":"The base URL of the OpenID Connect (OIDC) server, for example, `https://host:port/auth`. OIDC discovery endpoint will be called by default by appending a '.well-known/openid-configuration' path to this URL. Note if you work with Keycloak OIDC server, make sure the base URL is in the following format: `https://host:port/auth/realms/++{++realm++}++` where `++{++realm++}++` has to be replaced by the name of the Keycloak realm.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"auth-server-url","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"java.lang.Boolean","key":".discovery-enabled","configDoc":"Enables OIDC discovery. If the discovery is disabled then the OIDC endpoint URLs must be configured individually.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"discovery-enabled","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".token-path","configDoc":"Relative path or absolute URL of the OIDC token endpoint which issues access and refresh tokens.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"token-path","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".client-id","configDoc":"The client-id of the application. Each application has a client-id that is used to identify the application","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"client-id","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"java.time.Duration","key":".connection-delay","configDoc":"The maximum amount of time connecting to the currently unavailable OIDC server will be attempted for. The number of times the connection request will be repeated is calculated by dividing the value of this property by 2. For example, setting it to `20S` will allow for requesting the connection up to 10 times with a 2 seconds delay between the retries. Note this property is only effective when the initial OIDC connection is created, for example, when requesting a well-known OIDC configuration. Use the 'connection-retry-count' property to support trying to re-establish an already available connection which may have been dropped.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"connection-delay","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"int","key":".connection-retry-count","configDoc":"The number of times an attempt to re-establish an already available connection will be repeated for. Note this property is different to the `connection-delay` property which is only effective during the initial OIDC connection creation. This property is used to try to recover the existing connection which may have been temporarily lost. For example, if a request to the OIDC token endpoint fails due to a connection exception then the request will be retried for a number of times configured by this property.","withinAMap":false,"defaultValue":"3","javaDocSiteLink":"","docMapKey":"connection-retry-count","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"java.time.Duration","key":".connection-timeout","configDoc":"The amount of time after which the current OIDC connection request will time out.","withinAMap":false,"defaultValue":"10S","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"connection-timeout","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"java.lang.Integer","key":".max-pool-size","configDoc":"The maximum size of the connection pool used by the WebClient","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"max-pool-size","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocSection":{"name":"","optional":false,"withinAMap":false,"sectionDetails":null,"sectionDetailsTitle":".credentials","configPhase":"BUILD_TIME","topLevelGrouping":"","configGroupType":"io.quarkus.oidc.common.runtime.OidcCommonConfig.Credentials","showSection":false,"configDocItems":[{"configDocKey":{"type":"string","key":".credentials.secret","configDoc":"Client secret which is used for a `client_secret_basic` authentication method. Note that a 'client-secret.value' can be used instead but both properties are mutually exclusive.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"secret","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".credentials.client-secret.value","configDoc":"The client secret value - it will be ignored if 'secret.key' is set","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"value","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".credentials.client-secret.provider.name","configDoc":"The CredentialsProvider name which should only be set if more than one CredentialsProvider is registered","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"name","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".credentials.client-secret.provider.key","configDoc":"The CredentialsProvider client secret key","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"io.quarkus.oidc.common.runtime.OidcCommonConfig.Credentials.Secret.Method","key":".credentials.client-secret.method","configDoc":"Authentication method.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"method","configPhase":"BUILD_TIME","acceptedValues":["basic","post","post-jwt"],"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".credentials.jwt.secret","configDoc":"If provided, indicates that JWT is signed using a secret key","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"secret","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".credentials.jwt.secret-provider.name","configDoc":"The CredentialsProvider name which should only be set if more than one CredentialsProvider is registered","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"name","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".credentials.jwt.secret-provider.key","configDoc":"The CredentialsProvider client secret key","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".credentials.jwt.key-file","configDoc":"If provided, indicates that JWT is signed using a private key in PEM or JWK format. You can use the `signature-algorithm` property to specify the key algorithm.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-file","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".credentials.jwt.key-store-file","configDoc":"If provided, indicates that JWT is signed using a private key from a key store","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-file","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".credentials.jwt.key-store-password","configDoc":"A parameter to specify the password of the key store file. If not given, the default (\"password\") is used.","withinAMap":false,"defaultValue":"password","javaDocSiteLink":"","docMapKey":"key-store-password","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".credentials.jwt.key-id","configDoc":"The private key id/alias","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-id","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".credentials.jwt.key-password","configDoc":"The private key password","withinAMap":false,"defaultValue":"password","javaDocSiteLink":"","docMapKey":"key-password","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".credentials.jwt.audience","configDoc":"JWT audience ('aud') claim value. By default the audience is set to the address of the OpenId Connect Provider's token endpoint.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"audience","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".credentials.jwt.token-key-id","configDoc":"Key identifier of the signing key added as a JWT 'kid' header","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"token-key-id","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".credentials.jwt.issuer","configDoc":"Issuer of the signing key added as a JWT 'iss' claim (default: client id)","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"issuer","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".credentials.jwt.subject","configDoc":"Subject of the signing key added as a JWT 'sub' claim (default: client id)","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"subject","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".credentials.jwt.signature-algorithm","configDoc":"Signature algorithm, also used for the `key-file` property. Supported values: RS256, RS384, RS512, PS256, PS384, PS512, ES256, ES384, ES512, HS256, HS384, HS512.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"signature-algorithm","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"int","key":".credentials.jwt.lifespan","configDoc":"JWT life-span in seconds. It will be added to the time it was issued at to calculate the expiration time.","withinAMap":false,"defaultValue":"10","javaDocSiteLink":"","docMapKey":"lifespan","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}}],"anchorPrefix":null}},{"configDocSection":{"name":"","optional":false,"withinAMap":false,"sectionDetails":null,"sectionDetailsTitle":".proxy","configPhase":"BUILD_TIME","topLevelGrouping":"","configGroupType":"io.quarkus.oidc.common.runtime.OidcCommonConfig.Proxy","showSection":false,"configDocItems":[{"configDocKey":{"type":"string","key":".proxy.host","configDoc":"The host (name or IP address) of the Proxy.\n Note: If OIDC adapter needs to use a Proxy to talk with OIDC server (Provider), then at least the \"host\" config item must be configured to enable the usage of a Proxy.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"host","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"int","key":".proxy.port","configDoc":"The port number of the Proxy. Default value is 80.","withinAMap":false,"defaultValue":"80","javaDocSiteLink":"","docMapKey":"port","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".proxy.username","configDoc":"The username, if Proxy needs authentication.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"username","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".proxy.password","configDoc":"The password, if Proxy needs authentication.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"password","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}}],"anchorPrefix":null}},{"configDocSection":{"name":"","optional":false,"withinAMap":false,"sectionDetails":null,"sectionDetailsTitle":".tls","configPhase":"BUILD_TIME","topLevelGrouping":"","configGroupType":"io.quarkus.oidc.common.runtime.OidcCommonConfig.Tls","showSection":false,"configDocItems":[{"configDocKey":{"type":"io.quarkus.oidc.common.runtime.OidcCommonConfig.Tls.Verification","key":".tls.verification","configDoc":"Certificate validation and hostname verification, which can be one of the following values from enum `Verification`. Default is required.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"verification","configPhase":"BUILD_TIME","acceptedValues":["required","certificate-validation","none"],"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"path","key":".tls.key-store-file","configDoc":"An optional key store which holds the certificate information instead of specifying separate files.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-file","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".tls.key-store-file-type","configDoc":"An optional parameter to specify type of the key store file. If not given, the type is automatically detected based on the file name.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-file-type","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".tls.key-store-provider","configDoc":"An optional parameter to specify a provider of the key store file. If not given, the provider is automatically detected based on the key store file type.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-provider","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".tls.key-store-password","configDoc":"A parameter to specify the password of the key store file. If not given, the default (\"password\") is used.","withinAMap":false,"defaultValue":"password","javaDocSiteLink":"","docMapKey":"key-store-password","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".tls.key-store-key-alias","configDoc":"An optional parameter to select a specific key in the key store. When SNI is disabled, if the key store contains multiple keys and no alias is specified, the behavior is undefined.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-key-alias","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".tls.key-store-key-password","configDoc":"An optional parameter to define the password for the key, in case it's different from `key-store-password`.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-key-password","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"path","key":".tls.trust-store-file","configDoc":"An optional trust store which holds the certificate information of the certificates to trust","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-file","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".tls.trust-store-password","configDoc":"A parameter to specify the password of the trust store file.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-password","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".tls.trust-store-cert-alias","configDoc":"A parameter to specify the alias of the trust store certificate.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-cert-alias","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".tls.trust-store-file-type","configDoc":"An optional parameter to specify type of the trust store file. If not given, the type is automatically detected based on the file name.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-file-type","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".tls.trust-store-provider","configDoc":"An optional parameter to specify a provider of the trust store file. If not given, the provider is automatically detected based on the trust store file type.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-provider","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}}],"anchorPrefix":null}},{"configDocKey":{"type":"string","key":".tenant-id","configDoc":"A unique tenant identifier. It must be set by `TenantConfigResolver` providers which resolve the tenant configuration dynamically and is optional in all other cases.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"tenant-id","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"boolean","key":".tenant-enabled","configDoc":"If this tenant configuration is enabled.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"tenant-enabled","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"io.quarkus.oidc.OidcTenantConfig.ApplicationType","key":".application-type","configDoc":"The application type, which can be one of the following values from enum `ApplicationType`.","withinAMap":false,"defaultValue":"service","javaDocSiteLink":"","docMapKey":"application-type","configPhase":"BUILD_TIME","acceptedValues":["web-app","service","hybrid"],"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".authorization-path","configDoc":"Relative path or absolute URL of the OIDC authorization endpoint which authenticates the users. This property must be set for the 'web-app' applications if OIDC discovery is disabled. This property will be ignored if the discovery is enabled.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"authorization-path","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".user-info-path","configDoc":"Relative path or absolute URL of the OIDC userinfo endpoint. This property must only be set for the 'web-app' applications if OIDC discovery is disabled and 'authentication.user-info-required' property is enabled. This property will be ignored if the discovery is enabled.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"user-info-path","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".introspection-path","configDoc":"Relative path or absolute URL of the OIDC RFC7662 introspection endpoint which can introspect both opaque and JWT tokens. This property must be set if OIDC discovery is disabled and 1) the opaque bearer access tokens have to be verified or 2) JWT tokens have to be verified while the cached JWK verification set with no matching JWK is being refreshed. This property will be ignored if the discovery is enabled.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"introspection-path","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".jwks-path","configDoc":"Relative path or absolute URL of the OIDC JWKS endpoint which returns a JSON Web Key Verification Set. This property should be set if OIDC discovery is disabled and the local JWT verification is required. This property will be ignored if the discovery is enabled.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"jwks-path","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".end-session-path","configDoc":"Relative path or absolute URL of the OIDC end_session_endpoint. This property must be set if OIDC discovery is disabled and RP Initiated Logout support for the 'web-app' applications is required. This property will be ignored if the discovery is enabled.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"end-session-path","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".public-key","configDoc":"Public key for the local JWT token verification. OIDC server connection will not be created when this property is set.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"public-key","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocSection":{"name":"","optional":false,"withinAMap":false,"sectionDetails":null,"sectionDetailsTitle":".roles","configPhase":"BUILD_TIME","topLevelGrouping":"","configGroupType":"io.quarkus.oidc.OidcTenantConfig.Roles","showSection":false,"configDocItems":[{"configDocKey":{"type":"string","key":".roles.role-claim-path","configDoc":"List of paths to claims containing an array of groups. Each path starts from the top level JWT JSON object and can contain multiple segments where each segment represents a JSON object name only, example: \"realm/groups\". Use double quotes with the namespace qualified claim names. This property can be used if a token has no 'groups' claim but has the groups set in one or more different claims.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"role-claim-path","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":true,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".roles.role-claim-separator","configDoc":"Separator for splitting a string which may contain multiple group values. It will only be used if the \"role-claim-path\" property points to one or more custom claims whose values are strings. A single space will be used by default because the standard 'scope' claim may contain a space separated sequence.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"role-claim-separator","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"io.quarkus.oidc.OidcTenantConfig.Roles.Source","key":".roles.source","configDoc":"Source of the principal roles.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"source","configPhase":"BUILD_TIME","acceptedValues":["idtoken","accesstoken","userinfo"],"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}}],"anchorPrefix":null}},{"configDocSection":{"name":"","optional":false,"withinAMap":false,"sectionDetails":null,"sectionDetailsTitle":".token","configPhase":"BUILD_TIME","topLevelGrouping":"","configGroupType":"io.quarkus.oidc.OidcTenantConfig.Token","showSection":false,"configDocItems":[{"configDocKey":{"type":"string","key":".token.issuer","configDoc":"Expected issuer 'iss' claim value. Note this property overrides the `issuer` property which may be set in OpenId Connect provider's well-known configuration. If the `iss` claim value varies depending on the host/IP address or tenant id of the provider then you may skip the issuer verification by setting this property to 'any' but it should be done only when other options (such as configuring the provider to use the fixed `iss` claim value) are not possible.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"issuer","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".token.audience","configDoc":"Expected audience 'aud' claim value which may be a string or an array of strings.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"audience","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":true,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".token.token-type","configDoc":"Expected token type","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"token-type","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"java.lang.Integer","key":".token.lifespan-grace","configDoc":"Life span grace period in seconds. When checking token expiry, current time is allowed to be later than token expiration time by at most the configured number of seconds. When checking token issuance, current time is allowed to be sooner than token issue time by at most the configured number of seconds.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"lifespan-grace","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".token.principal-claim","configDoc":"Name of the claim which contains a principal name. By default, the 'upn', 'preferred_username' and `sub` claims are checked.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"principal-claim","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"boolean","key":".token.refresh-expired","configDoc":"Refresh expired ID tokens. If this property is enabled then a refresh token request will be performed if the ID token has expired and, if successful, the local session will be updated with the new set of tokens. Otherwise, the local session will be invalidated and the user redirected to the OpenID Provider to re-authenticate. In this case the user may not be challenged again if the OIDC provider session is still active. For this option be effective the `authentication.session-age-extension` property should also be set to a non-zero value since the refresh token is currently kept in the user session. This option is valid only when the application is of type `ApplicationType++#++WEB_APP`++}++.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"refresh-expired","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"java.time.Duration","key":".token.refresh-token-time-skew","configDoc":"Refresh token time skew in seconds. If this property is enabled then the configured number of seconds is added to the current time when checking whether the access token should be refreshed. If the sum is greater than this access token's expiration time then a refresh is going to happen. This property will be ignored if the 'refresh-expired' property is not enabled.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"refresh-token-time-skew","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"java.time.Duration","key":".token.forced-jwk-refresh-interval","configDoc":"Forced JWK set refresh interval in minutes.","withinAMap":false,"defaultValue":"10M","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"forced-jwk-refresh-interval","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".token.header","configDoc":"Custom HTTP header that contains a bearer token. This option is valid only when the application is of type `ApplicationType++#++SERVICE`++}++.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"header","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"boolean","key":".token.allow-jwt-introspection","configDoc":"Allow the remote introspection of JWT tokens when no matching JWK key is available. Note this property is set to 'true' by default for backward-compatibility reasons and will be set to `false` instead in one of the next releases. Also note this property will be ignored if JWK endpoint URI is not available and introspecting the tokens is the only verification option.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"allow-jwt-introspection","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"boolean","key":".token.allow-opaque-token-introspection","configDoc":"Allow the remote introspection of the opaque tokens. Set this property to 'false' if only JWT tokens are expected.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"allow-opaque-token-introspection","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}}],"anchorPrefix":null}},{"configDocSection":{"name":"","optional":false,"withinAMap":false,"sectionDetails":null,"sectionDetailsTitle":".logout","configPhase":"BUILD_TIME","topLevelGrouping":"","configGroupType":"io.quarkus.oidc.OidcTenantConfig.Logout","showSection":false,"configDocItems":[{"configDocKey":{"type":"string","key":".logout.path","configDoc":"The relative path of the logout endpoint at the application. If provided, the application is able to initiate the logout through this endpoint in conformance with the OpenID Connect RP-Initiated Logout specification.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"path","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".logout.post-logout-path","configDoc":"Relative path of the application endpoint where the user should be redirected to after logging out from the OpenID Connect Provider. This endpoint URI must be properly registered at the OpenID Connect Provider as a valid redirect URI.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"post-logout-path","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".logout.post-logout-uri-param","configDoc":"Name of the post logout URI parameter which will be added as a query parameter to the logout redirect URI.","withinAMap":false,"defaultValue":"post_logout_redirect_uri","javaDocSiteLink":"","docMapKey":"post-logout-uri-param","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"`Map<String,String>`","key":".logout.extra-params","configDoc":"Additional properties which will be added as the query parameters to the logout redirect URI.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"extra-params","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":true,"withinAConfigGroup":true,"topLevelGrouping":""}}],"anchorPrefix":null}},{"configDocSection":{"name":"","optional":false,"withinAMap":false,"sectionDetails":null,"sectionDetailsTitle":".authentication","configPhase":"BUILD_TIME","topLevelGrouping":"","configGroupType":"io.quarkus.oidc.OidcTenantConfig.Authentication","showSection":false,"configDocItems":[{"configDocKey":{"type":"string","key":".authentication.redirect-path","configDoc":"Relative path for calculating a \"redirect_uri\" query parameter. It has to start from a forward slash and will be appended to the request URI's host and port. For example, if the current request URI is 'https://localhost:8080/service' then a 'redirect_uri' parameter will be set to 'https://localhost:8080/' if this property is set to '/' and be the same as the request URI if this property has not been configured. Note the original request URI will be restored after the user has authenticated if 'restorePathAfterRedirect' is set to 'true'.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"redirect-path","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"boolean","key":".authentication.restore-path-after-redirect","configDoc":"If this property is set to 'true' then the original request URI which was used before the authentication will be restored after the user has been redirected back to the application. Note if `redirectPath` property is not set the the original request URI will be restored even if this property is disabled.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"restore-path-after-redirect","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"boolean","key":".authentication.remove-redirect-parameters","configDoc":"Remove the query parameters such as 'code' and 'state' set by the OIDC server on the redirect URI after the user has authenticated by redirecting a user to the same URI but without the query parameters.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"remove-redirect-parameters","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"boolean","key":".authentication.verify-access-token","configDoc":"Both ID and access tokens are fetched from the OIDC provider as part of the authorization code flow. ID token is always verified on every user request as the primary token which is used to represent the principal and extract the roles. Access token is not verified by default since it is meant to be propagated to the downstream services. The verification of the access token should be enabled if it is injected as a JWT token. Access tokens obtained as part of the code flow will always be verified if `quarkus.oidc.roles.source` property is set to `accesstoken` which means the authorization decision will be based on the roles extracted from the access token. Bearer access tokens are always verified.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"verify-access-token","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"java.lang.Boolean","key":".authentication.force-redirect-https-scheme","configDoc":"Force 'https' as the 'redirect_uri' parameter scheme when running behind an SSL terminating reverse proxy. This property, if enabled, will also affect the logout `post_logout_redirect_uri` and the local redirect requests.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"force-redirect-https-scheme","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".authentication.scopes","configDoc":"List of scopes","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"scopes","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":true,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"`Map<String,String>`","key":".authentication.extra-params","configDoc":"Additional properties which will be added as the query parameters to the authentication redirect URI.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"extra-params","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":true,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"boolean","key":".authentication.cookie-force-secure","configDoc":"If enabled the state, session and post logout cookies will have their 'secure' parameter set to 'true' when HTTP is used. It may be necessary when running behind an SSL terminating reverse proxy. The cookies will always be secure if HTTPS is used even if this property is set to false.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"cookie-force-secure","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".authentication.cookie-suffix","configDoc":"Cookie name suffix. For example, a session cookie name for the default OIDC tenant is 'q_session' but can be changed to 'q_session_test' if this property is set to 'test'.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"cookie-suffix","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".authentication.cookie-path","configDoc":"Cookie path parameter value which, if set, will be used to set a path parameter for the session, state and post logout cookies. The `cookie-path-header` property, if set, will be checked first.","withinAMap":false,"defaultValue":"/","javaDocSiteLink":"","docMapKey":"cookie-path","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".authentication.cookie-path-header","configDoc":"Cookie path header parameter value which, if set, identifies the incoming HTTP header whose value will be used to set a path parameter for the session, state and post logout cookies. If the header is missing then the `cookie-path` property will be checked.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"cookie-path-header","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"string","key":".authentication.cookie-domain","configDoc":"Cookie domain parameter value which, if set, will be used for the session, state and post logout cookies.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"cookie-domain","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"java.lang.Boolean","key":".authentication.user-info-required","configDoc":"If this property is set to 'true' then an OIDC UserInfo endpoint will be called.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"user-info-required","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"java.time.Duration","key":".authentication.session-age-extension","configDoc":"Session age extension in minutes. The user session age property is set to the value of the ID token life-span by default and the user will be redirected to the OIDC provider to re-authenticate once the session has expired. If this property is set to a non-zero value then the expired ID token can be refreshed before the session has expired. This property will be ignored if the `token.refresh-expired` property has not been enabled.","withinAMap":false,"defaultValue":"5M","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"session-age-extension","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"boolean","key":".authentication.java-script-auto-redirect","configDoc":"If this property is set to 'true' then a normal 302 redirect response will be returned if the request was initiated via JavaScript API such as XMLHttpRequest or Fetch and the current user needs to be (re)authenticated which may not be desirable for Single Page Applications since it automatically following the redirect may not work given that OIDC authorization endpoints typically do not support CORS. If this property is set to `false` then a status code of '499' will be returned to allow the client to handle the redirect manually","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"java-script-auto-redirect","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"java.lang.Boolean","key":".authentication.id-token-required","configDoc":"Requires that ID token is available when the authorization code flow completes. Disable this property only when you need to use the authorization code flow with OAuth2 providers which do not return ID token.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"id-token-required","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}}],"anchorPrefix":null}},{"configDocSection":{"name":"","optional":false,"withinAMap":false,"sectionDetails":null,"sectionDetailsTitle":".token-state-manager","configPhase":"BUILD_TIME","topLevelGrouping":"","configGroupType":"io.quarkus.oidc.OidcTenantConfig.TokenStateManager","showSection":false,"configDocItems":[{"configDocKey":{"type":"io.quarkus.oidc.OidcTenantConfig.TokenStateManager.Strategy","key":".token-state-manager.strategy","configDoc":"Default TokenStateManager strategy.","withinAMap":false,"defaultValue":"keep-all-tokens","javaDocSiteLink":"","docMapKey":"strategy","configPhase":"BUILD_TIME","acceptedValues":["keep-all-tokens","id-token","id-refresh-tokens"],"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"boolean","key":".token-state-manager.split-tokens","configDoc":"Default TokenStateManager keeps all tokens (ID, access and refresh) returned in the authorization code grant response in a single session cookie by default. Enable this property to minimize a session cookie size","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"split-tokens","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}}],"anchorPrefix":null}},{"configDocKey":{"type":"boolean","key":".allow-token-introspection-cache","configDoc":"Allow caching the token introspection data. Note enabling this property does not enable the cache itself but only permits to cache the token introspection for a given tenant. If the default token cache can be used then please see `OidcConfig.TokenCache` how to enable it.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"allow-token-introspection-cache","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"boolean","key":".allow-user-info-cache","configDoc":"Allow caching the user info data. Note enabling this property does not enable the cache itself but only permits to cache the user info data for a given tenant. If the default token cache can be used then please see `OidcConfig.TokenCache` how to enable it.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"allow-user-info-cache","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}},{"configDocKey":{"type":"io.quarkus.oidc.OidcTenantConfig.Provider","key":".provider","configDoc":"Well known OpenId Connect provider identifier","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"provider","configPhase":"BUILD_TIME","acceptedValues":["apple","facebook","github","google","microsoft"],"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":""}}]