[{"configDocKey":{"type":"io.quarkus.qute.runtime.QuteRuntimeConfig.PropertyNotFoundStrategy","key":"quarkus.qute.property-not-found-strategy","configDoc":"The strategy used when a standalone expression evaluates to a \"not found\" value at runtime and the `quarkus.qute.strict-rendering` config property is set to `false` \nThis strategy is never used when evaluating section parameters, e.g. `++{#++if foo.name++}++`. In such case, it's the responsibility of the section to handle this situation appropriately. \nBy default, the `NOT_FOUND` constant is written to the output. However, in the development mode the `PropertyNotFoundStrategy++#++THROW_EXCEPTION` is used by default, i.e. when the strategy is not specified.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"property-not-found-strategy","configPhase":"RUN_TIME","acceptedValues":["tooltip:default[Output the `NOT_FOUND` constant.]","tooltip:noop[No operation - no output.]","tooltip:throw-exception[Throw a `TemplateException`.]","tooltip:output-original[Output the original expression string, e.g. `++{++foo.name++}++`.]"],"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.qute","enum":true}},{"configDocKey":{"type":"boolean","key":"quarkus.qute.remove-standalone-lines","configDoc":"Specify whether the parser should remove standalone lines from the output. A standalone line is a line that contains at least one section tag, parameter declaration, or comment but no expression and no non-whitespace character.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"remove-standalone-lines","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.qute","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.qute.strict-rendering","configDoc":"If set to `true` then any expression that is evaluated to a `Results.NotFound` value will always result in a `TemplateException` and the rendering is aborted. \nNote that the `quarkus.qute.property-not-found-strategy` config property is completely ignored if strict rendering is enabled.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"strict-rendering","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.qute","enum":false}},{"configDocKey":{"type":"long","key":"quarkus.qute.timeout","configDoc":"The global rendering timeout in milliseconds. It is used if no `timeout` template instance attribute is set.","withinAMap":false,"defaultValue":"10000","javaDocSiteLink":"","docMapKey":"timeout","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.qute","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.qute.use-async-timeout","configDoc":"If set to `true` then the timeout should also be used for asynchronous rendering methods, such as `TemplateInstance++#++createUni()` and `TemplateInstance++#++renderAsync()`.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"use-async-timeout","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.qute","enum":false}}]