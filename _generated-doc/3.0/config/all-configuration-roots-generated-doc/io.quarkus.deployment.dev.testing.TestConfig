[{"configDocKey":{"type":"io.quarkus.deployment.dev.testing.TestConfig.Mode","key":"quarkus.test.continuous-testing","configDoc":"If continuous testing is enabled. The default value is 'paused', which will allow you to start testing from the console or the Dev UI, but will not run tests on startup. If this is set to 'enabled' then testing will start as soon as the application has started. If this is 'disabled' then continuous testing is not enabled, and can't be enabled without restarting the application.","withinAMap":false,"defaultValue":"paused","javaDocSiteLink":"","docMapKey":"continuous-testing","configPhase":"BUILD_TIME","acceptedValues":["`paused`","`enabled`","`disabled`"],"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.test","enum":true}},{"configDocKey":{"type":"boolean","key":"quarkus.test.display-test-output","configDoc":"If output from the running tests should be displayed in the console.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"display-test-output","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.test","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.test.include-tags","configDoc":"Tags that should be included for continuous testing.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"include-tags","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":true,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.test","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.test.exclude-tags","configDoc":"Tags that should be excluded by default with continuous testing. This is ignored if include-tags has been set. Defaults to 'slow'","withinAMap":false,"defaultValue":"slow","javaDocSiteLink":"","docMapKey":"exclude-tags","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":true,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.test","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.test.include-pattern","configDoc":"Tests that should be included for continuous testing. This is a regular expression and is matched against the test class name (not the file name).","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"include-pattern","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.test","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.test.exclude-pattern","configDoc":"Tests that should be excluded with continuous testing. This is a regular expression and is matched against the test class name (not the file name). This is ignored if include-pattern has been set.","withinAMap":false,"defaultValue":".*\\.IT[^.]+|.*IT|.*ITCase","javaDocSiteLink":"","docMapKey":"exclude-pattern","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.test","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.test.include-engines","configDoc":"Test engine ids that should be included for continuous testing.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"include-engines","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":true,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.test","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.test.exclude-engines","configDoc":"Test engine ids that should be excluded by default with continuous testing. This is ignored if include-engines has been set.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"exclude-engines","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":true,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.test","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.test.flat-class-path","configDoc":"Changes tests to use the 'flat' ClassPath used in Quarkus 1.x versions. This means all Quarkus and test classes are loaded in the same ClassLoader, however it means you cannot use continuous testing. Note that if you find this necessary for your application then you may also have problems running in development mode, which cannot use a flat class path.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"flat-class-path","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.test","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.test.native-image-profile","configDoc":"The profile to use when testing the native image","withinAMap":false,"defaultValue":"prod","javaDocSiteLink":"","docMapKey":"native-image-profile","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.test","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.test.integration-test-profile","configDoc":"The profile to use when testing using `@QuarkusIntegrationTest`","withinAMap":false,"defaultValue":"prod","javaDocSiteLink":"","docMapKey":"integration-test-profile","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.test","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.test.profile","configDoc":"The profile (dev, test or prod) to use when testing using @QuarkusTest","withinAMap":false,"defaultValue":"test","javaDocSiteLink":"","docMapKey":"profile","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.test","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.test.profile.tags","configDoc":"The tags this profile is associated with. When the `quarkus.test.profile.tags` System property is set (its value is a comma separated list of strings) then Quarkus will only execute tests that are annotated with a `@TestProfile` that has at least one of the supplied (via the aforementioned system property) tags.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"tags","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":true,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.test","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.test.container.network","configDoc":"Controls the container network to be used when @QuarkusIntegration needs to launch the application in a container. This setting only applies if Quarkus does not need to use a shared network - which is the case if DevServices are used when running the test.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"network","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.test","enum":false}},{"configDocKey":{"type":"`Map<String,String>`","key":"quarkus.test.container.additional-exposed-ports","configDoc":"Set additional ports to be exposed when @QuarkusIntegration needs to launch the application in a container.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"additional-exposed-ports","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":true,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.test","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.test.arg-line","configDoc":"Additional launch parameters to be used when Quarkus launches the produced artifact for `@QuarkusIntegrationTest` When the artifact is a `jar`, this string is passed right after the `java` command. When the artifact is a `container`, this string is passed right after the `docker run` command. When the artifact is a `native binary`, this string is passed right after the native binary name.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"arg-line","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":true,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.test","enum":false}},{"configDocKey":{"type":"java.time.Duration","key":"quarkus.test.wait-time","configDoc":"Used in `@QuarkusIntegrationTest` and `NativeImageTest` to determine how long the test will wait for the application to launch","withinAMap":false,"defaultValue":"PT1M","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"wait-time","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.test","enum":false}},{"configDocKey":{"type":"java.time.Duration","key":"quarkus.test.hang-detection-timeout","configDoc":"Configures the hang detection in @QuarkusTest. If no activity happens (i.e. no test callbacks are called) over this period then QuarkusTest will dump all threads stack traces, to help diagnose a potential hang. Note that the initial timeout (before Quarkus has started) will only apply if provided by a system property, as it is not possible to read all config sources until Quarkus has booted.","withinAMap":false,"defaultValue":"10M","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"hang-detection-timeout","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.test","enum":false}},{"configDocKey":{"type":"io.quarkus.deployment.dev.testing.TestType","key":"quarkus.test.type","configDoc":"The type of test to run, this can be either: quarkus-test: Only runs `@QuarkusTest` annotated test classes unit: Only runs classes that are not annotated with `@QuarkusTest` all: Runs both, running the unit tests first","withinAMap":false,"defaultValue":"all","javaDocSiteLink":"","docMapKey":"type","configPhase":"BUILD_TIME","acceptedValues":["`unit`","`quarkus-test`","`all`"],"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.test","enum":true}},{"configDocKey":{"type":"string","key":"quarkus.test.class-clone-pattern","configDoc":"If a class matches this pattern then it will be cloned into the Quarkus ClassLoader even if it is in a parent first artifact. This is important for collections which can contain objects from the Quarkus ClassLoader, but for most parent first classes it will just cause problems.","withinAMap":false,"defaultValue":"java\\..*","javaDocSiteLink":"","docMapKey":"class-clone-pattern","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.test","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.test.only-test-application-module","configDoc":"If this is true then only the tests from the main application module will be run (i.e. the module that is currently running mvn quarkus:dev). If this is false then tests from all dependency modules will be run as well.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"only-test-application-module","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.test","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.test.include-module-pattern","configDoc":"Modules that should be included for continuous testing. This is a regular expression and is matched against the module groupId:artifactId.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"include-module-pattern","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.test","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.test.exclude-module-pattern","configDoc":"Modules that should be excluded for continuous testing. This is a regular expression and is matched against the module groupId:artifactId. This is ignored if include-module-pattern has been set.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"exclude-module-pattern","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.test","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.test.enable-callbacks-for-integration-tests","configDoc":"If the test callbacks should be invoked for the integration tests (tests annotated with `@QuarkusIntegrationTest`).","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"enable-callbacks-for-integration-tests","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.test","enum":false}}]