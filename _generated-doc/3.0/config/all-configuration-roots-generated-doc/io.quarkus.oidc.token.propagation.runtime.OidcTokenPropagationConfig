[{"configDocKey":{"type":"boolean","key":"quarkus.oidc-token-propagation.register-filter","configDoc":"Enable either AccessTokenRequestFilter or JsonWebTokenRequestFilter for all the injected MP RestClient implementations. AccessTokenRequestFilter can propagate both opaque (binary) and JsonWebToken tokens but it can not modify and secure the updated JsonWebToken tokens. JsonWebTokenRequestFilter can only propagate JsonWebToken tokens but it can also modify and secure them again. Enable the 'jsonWebToken' property to have JsonWebTokenRequestFilter registered. Alternatively, instead of using this property for registering these filters with all the injected MP RestClient implementations, both filters can be registered as MP RestClient providers with the specific MP RestClient implementations.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"register-filter","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.oidc-token-propagation","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.oidc-token-propagation.json-web-token","configDoc":"Enable JsonWebTokenRequestFilter instead of AccessTokenRequestFilter for all the injected MP RestClient implementations. This filter can propagate as well as modify and secure the updated JsonWebToken tokens. Note this property is ignored unless the 'registerFilter' property is enabled.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"json-web-token","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.oidc-token-propagation","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.oidc-token-propagation.secure-json-web-token","configDoc":"Secure the injected and possibly modified JsonWebToken. For example, a JsonWebToken produced and signed by OpenId Connect provider can be re-signed using a new private key. Note this property is injected into JsonWebTokenRequestFilter.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"secure-json-web-token","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.oidc-token-propagation","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.oidc-token-propagation.exchange-token","configDoc":"Exchange the current token with OpenId Connect Provider for a new token using either \"urn:ietf:params:oauth:grant-type:token-exchange\" or \"urn:ietf:params:oauth:grant-type:jwt-bearer\" token grant before propagating it. Note this property is injected into AccessTokenRequestFilter.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"exchange-token","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.oidc-token-propagation","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.oidc-token-propagation.client-name","configDoc":"Name of the configured OidcClient. Note this property is injected into AccessTokenRequestFilter and is only used if the `exchangeToken` property is enabled.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"client-name","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.oidc-token-propagation","enum":false}}]