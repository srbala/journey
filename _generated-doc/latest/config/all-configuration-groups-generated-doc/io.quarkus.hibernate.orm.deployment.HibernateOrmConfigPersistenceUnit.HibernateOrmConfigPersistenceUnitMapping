[{"configDocKey":{"type":"org.hibernate.annotations.TimeZoneStorageType","key":".timezone.default-storage","configDoc":"How to store timezones in the database by default\nfor properties of type `OffsetDateTime` and `ZonedDateTime`.\n\nThis default may be overridden on a per-property basis using `@TimeZoneStorage`.\n\nNOTE: Properties of type `OffsetTime` are https://hibernate.atlassian.net/browse/HHH-16287[not affected by this\nsetting].\n\n`default`::\nEquivalent to `native` if supported, `normalize-utc` otherwise.\n`auto`::\nEquivalent to `native` if supported, `column` otherwise.\n`native`::\nStores the timestamp and timezone in a column of type `timestamp with time zone`.\n+\nOnly available on some databases/dialects;\nif not supported, an exception will be thrown during static initialization.\n`column`::\nStores the timezone in a separate column next to the timestamp column.\n+\nUse `@TimeZoneColumn` on the relevant entity property to customize the timezone column.\n`normalize-utc`::\nDoes not store the timezone, and loses timezone information upon persisting.\n+\nInstead, normalizes the value to a timestamp in the UTC timezone.\n`normalize`::\nDoes not store the timezone, and loses timezone information upon persisting.\n+\nInstead, normalizes the value:\n* upon persisting to the database, to a timestamp in the JDBC timezone\nset through `quarkus.hibernate-orm.jdbc.timezone`,\nor the JVM default timezone if not set.\n* upon reading back from the database, to the JVM default timezone.\n+\nUse this to get the legacy behavior of Quarkus 2 / Hibernate ORM 5 or older.","withinAMap":false,"defaultValue":"default","javaDocSiteLink":"","docMapKey":"time-zone-default-storage","configPhase":"BUILD_TIME","acceptedValues":["`native`","`normalize`","`normalize-utc`","`column`","`auto`","`default`"],"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":true}},{"configDocKey":{"type":"io.quarkus.hibernate.orm.deployment.HibernateOrmConfigPersistenceUnit.IdOptimizerType","key":".id.optimizer.default","configDoc":"The optimizer to apply to identifier generators\nwhose optimizer is not configured explicitly.\n\nOnly relevant for table- and sequence-based identifier generators.\nOther generators, such as UUID-based generators, will ignore this setting.\n\nThe optimizer is responsible for pooling new identifier values,\nin order to reduce the frequency of database calls to retrieve those values\nand thereby improve performance.","withinAMap":false,"defaultValue":"pooled-lo","javaDocSiteLink":"","docMapKey":"id-optimizer-default","configPhase":"BUILD_TIME","acceptedValues":["`pooled-lo`","`pooled`","`none`"],"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"","enum":true}}]