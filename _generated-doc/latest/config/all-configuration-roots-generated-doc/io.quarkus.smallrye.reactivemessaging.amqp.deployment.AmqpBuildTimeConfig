[{"configDocKey":{"type":"java.lang.Boolean","key":"quarkus.amqp.devservices.enabled","configDoc":"If Dev Services for AMQP has been explicitly enabled or disabled. Dev Services are generally enabled by default, unless there is an existing configuration present. For AMQP, Dev Services starts a broker unless `amqp-host` or `amqp-port` are set or if all the Reactive Messaging AMQP channel are configured with `host` or `port`.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"enabled","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.amqp","enum":false}},{"configDocKey":{"type":"java.lang.Integer","key":"quarkus.amqp.devservices.port","configDoc":"Optional fixed port the dev service will listen to. \nIf not defined, the port will be chosen randomly.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"port","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.amqp","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.amqp.devservices.image-name","configDoc":"The image to use. Note that only ActiveMQ Artemis images are supported. Specifically, the image repository must end with `artemiscloud/activemq-artemis-broker`. Check https://quay.io/repository/artemiscloud/activemq-artemis-broker to find the available versions.","withinAMap":false,"defaultValue":"quay.io/artemiscloud/activemq-artemis-broker:1.0.11","javaDocSiteLink":"","docMapKey":"image-name","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.amqp","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.amqp.devservices.extra-args","configDoc":"The value of the `AMQ_EXTRA_ARGS` environment variable to pass to the container.","withinAMap":false,"defaultValue":"--no-autotune --mapped --no-fsync --relax-jolokia --http-host 0.0.0.0","javaDocSiteLink":"","docMapKey":"extra-args","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.amqp","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.amqp.devservices.shared","configDoc":"Indicates if the AMQP broker managed by Quarkus Dev Services is shared. When shared, Quarkus looks for running containers using label-based service discovery. If a matching container is found, it is used, and so a second one is not started. Otherwise, Dev Services for AMQP starts a new container. \nThe discovery uses the `quarkus-dev-service-amqp` label. The value is configured using the `service-name` property. \nContainer sharing is only used in dev mode.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"shared","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.amqp","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.amqp.devservices.service-name","configDoc":"The value of the `quarkus-dev-service-aqmp` label attached to the started container. This property is used when `shared` is set to `true`. In this case, before starting a container, Dev Services for AMQP looks for a container with the `quarkus-dev-service-amqp` label set to the configured value. If found, it will use this container instead of starting a new one. Otherwise, it starts a new container with the `quarkus-dev-service-amqp` label set to the specified value. \nThis property is used when you need multiple shared AMQP brokers.","withinAMap":false,"defaultValue":"amqp","javaDocSiteLink":"","docMapKey":"service-name","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.amqp","enum":false}}]