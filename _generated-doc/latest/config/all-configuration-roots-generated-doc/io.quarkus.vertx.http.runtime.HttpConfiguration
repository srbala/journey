[{"configDocKey":{"type":"boolean","key":"quarkus.http.cors","configDoc":"Enable the CORS filter.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"cors-enabled","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"int","key":"quarkus.http.port","configDoc":"The HTTP port","withinAMap":false,"defaultValue":"8080","javaDocSiteLink":"","docMapKey":"port","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"int","key":"quarkus.http.test-port","configDoc":"The HTTP port used to run tests","withinAMap":false,"defaultValue":"8081","javaDocSiteLink":"","docMapKey":"test-port","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.http.host","configDoc":"The HTTP host In dev/test mode this defaults to localhost, in prod mode this defaults to 0.0.0.0 Defaulting to 0.0.0.0 makes it easier to deploy Quarkus to container, however it is not suitable for dev/test mode as other people on the network can connect to your development machine.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"host","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.http.host-enabled","configDoc":"Enable listening to host:port","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"host-enabled","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"int","key":"quarkus.http.ssl-port","configDoc":"The HTTPS port","withinAMap":false,"defaultValue":"8443","javaDocSiteLink":"","docMapKey":"ssl-port","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"int","key":"quarkus.http.test-ssl-port","configDoc":"The HTTPS port used to run tests","withinAMap":false,"defaultValue":"8444","javaDocSiteLink":"","docMapKey":"test-ssl-port","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"io.quarkus.vertx.http.runtime.HttpConfiguration.InsecureRequests","key":"quarkus.http.insecure-requests","configDoc":"If insecure (i.e. http rather than https) requests are allowed. If this is `enabled` then http works as normal. `redirect` will still open the http port, but all requests will be redirected to the HTTPS port. `disabled` will prevent the HTTP port from opening at all.","withinAMap":false,"defaultValue":"enabled","javaDocSiteLink":"","docMapKey":"insecure-requests","configPhase":"RUN_TIME","acceptedValues":["`enabled`","`redirect`","`disabled`"],"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.http","enum":true}},{"configDocKey":{"type":"boolean","key":"quarkus.http.http2","configDoc":"If this is true (the default) then HTTP/2 will be enabled. Note that for browsers to be able to use it HTTPS must be enabled, and you must be running on JDK11 or above, as JDK8 does not support ALPN.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"http2","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.http.cors.origins","configDoc":"Origins allowed for CORS Comma separated list of valid URLs, e.g.: http://www.quarkus.io,http://localhost:3000 In case an entry of the list is surrounded by forward slashes, it is interpreted as a regular expression.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"origins","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":true,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.http.cors.methods","configDoc":"HTTP methods allowed for CORS Comma separated list of valid methods. ex: GET,PUT,POST The filter allows any method if this is not set. default: returns any requested method as valid","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"methods","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":true,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.http.cors.headers","configDoc":"HTTP headers allowed for CORS Comma separated list of valid headers. ex: X-Custom,Content-Disposition The filter allows any header if this is not set. default: returns any requested header as valid","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"headers","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":true,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.http.cors.exposed-headers","configDoc":"HTTP headers exposed in CORS Comma separated list of valid headers. ex: X-Custom,Content-Disposition default: empty","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"exposed-headers","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":true,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"java.time.Duration","key":"quarkus.http.cors.access-control-max-age","configDoc":"The `Access-Control-Max-Age` response header value indicating how long the results of a pre-flight request can be cached.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"access-control-max-age","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"java.lang.Boolean","key":"quarkus.http.cors.access-control-allow-credentials","configDoc":"The `Access-Control-Allow-Credentials` header is used to tell the browsers to expose the response to front-end JavaScript code when the request’s credentials mode Request.credentials is “include”. The value of this header will default to `true` if `quarkus.http.cors.origins` property is set and there is a match with the precise `Origin` header.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"access-control-allow-credentials","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.http.ssl.certificate.credentials-provider","configDoc":"The `CredentialsProvider`. If this property is configured then a matching 'CredentialsProvider' will be used to get the keystore, keystore key and truststore passwords unless these passwords have already been configured. Please note that using MicroProfile `ConfigSource` which is directly supported by Quarkus Configuration should be preferred unless using `CredentialsProvider` provides for some additional security and dynamism.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"credentials-provider","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.http.ssl.certificate.credentials-provider-name","configDoc":"The credentials provider bean name. \nIt is the `&++#++64;Named` value of the credentials provider bean. It is used to discriminate if multiple CredentialsProvider beans are available. It is recommended to set this property even if there is only one credentials provider currently available to ensure the same provider is always found in deployments where more than one provider may be available.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"credentials-provider-name","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"path","key":"quarkus.http.ssl.certificate.files","configDoc":"The list of path to server certificates using the PEM format. Specifying multiple files require SNI to be enabled.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"files","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":true,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"path","key":"quarkus.http.ssl.certificate.key-files","configDoc":"The list of path to server certificates private key file using the PEM format. Specifying multiple files require SNI to be enabled. The order of the key files must match the order of the certificates.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-files","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":true,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"path","key":"quarkus.http.ssl.certificate.key-store-file","configDoc":"An optional key store which holds the certificate information instead of specifying separate files.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-file","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.http.ssl.certificate.key-store-file-type","configDoc":"An optional parameter to specify type of the key store file. If not given, the type is automatically detected based on the file name.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-file-type","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.http.ssl.certificate.key-store-provider","configDoc":"An optional parameter to specify a provider of the key store file. If not given, the provider is automatically detected based on the key store file type.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-provider","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.http.ssl.certificate.key-store-password","configDoc":"A parameter to specify the password of the key store file. If not given, and if it can not be retrieved from `CredentialsProvider`.","withinAMap":false,"defaultValue":"password","javaDocSiteLink":"","docMapKey":"key-store-password","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.http.ssl.certificate.key-store-password-key","configDoc":"A parameter to specify a `CredentialsProvider` property key which can be used to get the password of the key store file from `CredentialsProvider`.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-password-key","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.http.ssl.certificate.key-store-key-alias","configDoc":"An optional parameter to select a specific key in the key store. When SNI is disabled, if the key store contains multiple keys and no alias is specified, the behavior is undefined.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-key-alias","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.http.ssl.certificate.key-store-key-password","configDoc":"An optional parameter to define the password for the key, in case it's different from `key-store-password` If not given then it may be retrieved from `CredentialsProvider`.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-key-password","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.http.ssl.certificate.key-store-key-password-key","configDoc":"A parameter to specify a `CredentialsProvider` property key which can be used to get the password for the key from `CredentialsProvider`.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"key-store-key-password-key","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"path","key":"quarkus.http.ssl.certificate.trust-store-file","configDoc":"An optional trust store which holds the certificate information of the certificates to trust.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-file","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.http.ssl.certificate.trust-store-file-type","configDoc":"An optional parameter to specify type of the trust store file. If not given, the type is automatically detected based on the file name.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-file-type","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.http.ssl.certificate.trust-store-provider","configDoc":"An optional parameter to specify a provider of the trust store file. If not given, the provider is automatically detected based on the trust store file type.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-provider","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.http.ssl.certificate.trust-store-password","configDoc":"A parameter to specify the password of the trust store file. If not given then it may be retrieved from `CredentialsProvider`.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-password","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.http.ssl.certificate.trust-store-password-key","configDoc":"A parameter to specify a `CredentialsProvider` property key which can be used to get the password of the trust store file from `CredentialsProvider`.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-password-key","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.http.ssl.certificate.trust-store-cert-alias","configDoc":"An optional parameter to trust only one specific certificate in the trust store (instead of trusting all certificates in the store).","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"trust-store-cert-alias","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.http.ssl.cipher-suites","configDoc":"The cipher suites to use. If none is given, a reasonable default is selected.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"cipher-suites","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":true,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.http.ssl.protocols","configDoc":"The list of protocols to explicitly enable.","withinAMap":false,"defaultValue":"TLSv1.3,TLSv1.2","javaDocSiteLink":"","docMapKey":"protocols","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":true,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.http.ssl.sni","configDoc":"Enables Server Name Indication (SNI), an TLS extension allowing the server to use multiple certificates. The client indicate the server name during the TLS handshake, allowing the server to select the right certificate.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"sni","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.http.static-resources.index-page","configDoc":"Set the index page when serving static resources.","withinAMap":false,"defaultValue":"index.html","javaDocSiteLink":"","docMapKey":"index-page","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.http.static-resources.include-hidden","configDoc":"Set whether hidden files should be served.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"include-hidden","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.http.static-resources.enable-range-support","configDoc":"Set whether range requests (resumable downloads; media streaming) should be enabled.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"enable-range-support","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.http.static-resources.caching-enabled","configDoc":"Set whether cache handling is enabled.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"caching-enabled","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"java.time.Duration","key":"quarkus.http.static-resources.cache-entry-timeout","configDoc":"Set the cache entry timeout. The default is `30` seconds.","withinAMap":false,"defaultValue":"30S","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"cache-entry-timeout","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"java.time.Duration","key":"quarkus.http.static-resources.max-age","configDoc":"Set value for max age in caching headers. The default is `24` hours.","withinAMap":false,"defaultValue":"24H","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"max-age","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"int","key":"quarkus.http.static-resources.max-cache-size","configDoc":"Set the max cache size.","withinAMap":false,"defaultValue":"10000","javaDocSiteLink":"","docMapKey":"max-cache-size","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.http.handle-100-continue-automatically","configDoc":"When set to `true`, the HTTP server automatically sends `100 CONTINUE` response when the request expects it (with the `Expect: 100-Continue` header).","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"handle100-continue-automatically","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"java.lang.Integer","key":"quarkus.http.io-threads","configDoc":"The number if IO threads used to perform IO. This will be automatically set to a reasonable value based on the number of CPU cores if it is not provided. If this is set to a higher value than the number of Vert.x event loops then it will be capped at the number of event loops. In general this should be controlled by setting quarkus.vertx.event-loops-pool-size, this setting should only be used if you want to limit the number of HTTP io threads to a smaller number than the total number of IO threads.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"io-threads","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"io.quarkus.runtime.configuration.MemorySize","key":"quarkus.http.limits.max-header-size","configDoc":"The maximum length of all headers.","withinAMap":false,"defaultValue":"20K","javaDocSiteLink":"","docMapKey":"max-header-size","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"io.quarkus.runtime.configuration.MemorySize","key":"quarkus.http.limits.max-body-size","configDoc":"The maximum size of a request body.","withinAMap":false,"defaultValue":"10240K","javaDocSiteLink":"","docMapKey":"max-body-size","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"io.quarkus.runtime.configuration.MemorySize","key":"quarkus.http.limits.max-chunk-size","configDoc":"The max HTTP chunk size","withinAMap":false,"defaultValue":"8192","javaDocSiteLink":"","docMapKey":"max-chunk-size","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"int","key":"quarkus.http.limits.max-initial-line-length","configDoc":"The maximum length of the initial line (e.g. `\"GET / HTTP/1.0\"`).","withinAMap":false,"defaultValue":"4096","javaDocSiteLink":"","docMapKey":"max-initial-line-length","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"io.quarkus.runtime.configuration.MemorySize","key":"quarkus.http.limits.max-form-attribute-size","configDoc":"The maximum length of a form attribute.","withinAMap":false,"defaultValue":"2048","javaDocSiteLink":"","docMapKey":"max-form-attribute-size","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"java.lang.Integer","key":"quarkus.http.limits.max-connections","configDoc":"The maximum number of connections that are allowed at any one time. If this is set it is recommended to set a short idle timeout.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"max-connections","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"java.time.Duration","key":"quarkus.http.idle-timeout","configDoc":"Http connection idle timeout","withinAMap":false,"defaultValue":"30M","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"idle-timeout","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"java.time.Duration","key":"quarkus.http.read-timeout","configDoc":"Http connection read timeout for blocking IO. This is the maximum amount of time a thread will wait for data, before an IOException will be thrown and the connection closed.","withinAMap":false,"defaultValue":"60S","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"read-timeout","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.http.body.handle-file-uploads","configDoc":"Whether the files sent using `multipart/form-data` will be stored locally. \nIf `true`, they will be stored in `quarkus.http.body-handler.uploads-directory` and will be made available via `io.vertx.ext.web.RoutingContext.fileUploads()`. Otherwise, the files sent using `multipart/form-data` will not be stored locally, and `io.vertx.ext.web.RoutingContext.fileUploads()` will always return an empty collection. Note that even with this option being set to `false`, the `multipart/form-data` requests will be accepted.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"handle-file-uploads","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.http.body.uploads-directory","configDoc":"The directory where the files sent using `multipart/form-data` should be stored. \nEither an absolute path or a path relative to the current directory of the application process.","withinAMap":false,"defaultValue":"${java.io.tmpdir}/uploads","javaDocSiteLink":"","docMapKey":"uploads-directory","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.http.body.merge-form-attributes","configDoc":"Whether the form attributes should be added to the request parameters. \nIf `true`, the form attributes will be added to the request parameters; otherwise the form parameters will not be added to the request parameters","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"merge-form-attributes","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.http.body.delete-uploaded-files-on-end","configDoc":"Whether the uploaded files should be removed after serving the request. \nIf `true` the uploaded files stored in `quarkus.http.body-handler.uploads-directory` will be removed after handling the request. Otherwise, the files will be left there forever.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"delete-uploaded-files-on-end","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.http.body.preallocate-body-buffer","configDoc":"Whether the body buffer should pre-allocated based on the `Content-Length` header value. \nIf `true` the body buffer is pre-allocated according to the size read from the `Content-Length` header. Otherwise, the body buffer is pre-allocated to 1KB, and is resized dynamically","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"preallocate-body-buffer","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.http.body.multipart.file-content-types","configDoc":"A comma-separated list of `ContentType` to indicate whether a given multipart field should be handled as a file part. You can use this setting to force HTTP-based extensions to parse a message part as a file based on its content type. For now, this setting only works when using RESTEasy Reactive.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"file-content-types","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":true,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.http.auth.session.encryption-key","configDoc":"The encryption key that is used to store persistent logins (e.g. for form auth). Logins are stored in a persistent cookie that is encrypted with AES-256 using a key derived from a SHA-256 hash of the key that is provided here. If no key is provided then an in-memory one will be generated, this will change on every restart though so it is not suitable for production environments. This must be more than 16 characters long for security reasons","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"encryption-key","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.http.so-reuse-port","configDoc":"Enable socket reuse port (linux/macOs native transport only)","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"so-reuse-port","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.http.tcp-quick-ack","configDoc":"Enable tcp quick ack (linux native transport only)","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"tcp-quick-ack","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.http.tcp-cork","configDoc":"Enable tcp cork (linux native transport only)","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"tcp-cork","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.http.tcp-fast-open","configDoc":"Enable tcp fast open (linux native transport only)","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"tcp-fast-open","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"int","key":"quarkus.http.accept-backlog","configDoc":"The accept backlog, this is how many connections can be waiting to be accepted before connections start being rejected","withinAMap":false,"defaultValue":"-1","javaDocSiteLink":"","docMapKey":"accept-backlog","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.http.domain-socket","configDoc":"Path to a unix domain socket","withinAMap":false,"defaultValue":"/var/run/io.quarkus.app.socket","javaDocSiteLink":"","docMapKey":"domain-socket","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.http.domain-socket-enabled","configDoc":"Enable listening to host:port","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"domain-socket-enabled","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.http.record-request-start-time","configDoc":"If this is true then the request start time will be recorded to enable logging of total request time. This has a small performance penalty, so is disabled by default.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"record-request-start-time","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.http.access-log.enabled","configDoc":"If access logging is enabled. By default this will log via the standard logging facility","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"enabled","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.http.access-log.exclude-pattern","configDoc":"A regular expression that can be used to exclude some paths from logging.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"exclude-pattern","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.http.access-log.pattern","configDoc":"The access log pattern.\n\nIf this is the string `common`, `combined` or `long` then this will use one of the specified named formats:\n\n- common: `%h %l %u %t \"%r\" %s %b`\n- combined: `%h %l %u %t \"%r\" %s %b \"%{i,Referer}\" \"%{i,User-Agent}\"`\n- long: `%r\\n%{ALL_REQUEST_HEADERS}`\n\nOtherwise, consult the Quarkus documentation for the full list of variables that can be used.","withinAMap":false,"defaultValue":"common","javaDocSiteLink":"","docMapKey":"pattern","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.http.access-log.log-to-file","configDoc":"If logging should be done to a separate file.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"log-to-file","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.http.access-log.base-file-name","configDoc":"The access log file base name, defaults to 'quarkus' which will give a log file name of 'quarkus.log'.","withinAMap":false,"defaultValue":"quarkus","javaDocSiteLink":"","docMapKey":"base-file-name","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.http.access-log.log-directory","configDoc":"The log directory to use when logging access to a file If this is not set then the current working directory is used.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"log-directory","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.http.access-log.log-suffix","configDoc":"The log file suffix","withinAMap":false,"defaultValue":".log","javaDocSiteLink":"","docMapKey":"log-suffix","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.http.access-log.category","configDoc":"The log category to use if logging is being done via the standard log mechanism (i.e. if base-file-name is empty).","withinAMap":false,"defaultValue":"io.quarkus.http.access-log","javaDocSiteLink":"","docMapKey":"category","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.http.access-log.rotate","configDoc":"If the log should be rotated daily","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"rotate","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.http.same-site-cookie.\"same-site-cookie\".case-sensitive","configDoc":"If the cookie pattern is case-sensitive","withinAMap":true,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"case-sensitive","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"io.vertx.core.http.CookieSameSite","key":"quarkus.http.same-site-cookie.\"same-site-cookie\".value","configDoc":"The value to set in the samesite attribute","withinAMap":true,"defaultValue":"","javaDocSiteLink":"https://vertx.io/docs/apidocs/io/vertx/core/http/CookieSameSite.html","docMapKey":"value","configPhase":"RUN_TIME","acceptedValues":["`none`","`strict`","`lax`"],"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":true}},{"configDocKey":{"type":"boolean","key":"quarkus.http.same-site-cookie.\"same-site-cookie\".enable-client-checker","configDoc":"Some User Agents break when sent SameSite=None, this will detect them and avoid sending the value","withinAMap":true,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"enable-client-checker","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.http.same-site-cookie.\"same-site-cookie\".add-secure-for-none","configDoc":"If this is true then the 'secure' attribute will automatically be sent on cookies with a SameSite attribute of None.","withinAMap":true,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"add-secure-for-none","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"io.quarkus.vertx.http.runtime.HttpConfiguration.PayloadHint","key":"quarkus.http.unhandled-error-content-type-default","configDoc":"Provides a hint (optional) for the default content type of responses generated for the errors not handled by the application. \nIf the client requested a supported content-type in request headers (e.g. \"Accept: application/json\", \"Accept: text/html\"), Quarkus will use that content type. \nOtherwise, it will default to the content type configured here.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"unhandled-error-content-type-default","configPhase":"RUN_TIME","acceptedValues":["`json`","`html`"],"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.http","enum":true}},{"configDocKey":{"type":"string","key":"quarkus.http.header.\"header\".path","configDoc":"The path this header should be applied","withinAMap":true,"defaultValue":"/*","javaDocSiteLink":"","docMapKey":"path","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.http.header.\"header\".value","configDoc":"The value for this header configuration","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"value","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.http.header.\"header\".methods","configDoc":"The HTTP methods for this header configuration","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"methods","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":true,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.http.filter.\"filter\".matches","configDoc":"A regular expression for the paths matching this configuration","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"matches","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"`Map<String,String>`","key":"quarkus.http.filter.\"filter\".header","configDoc":"Additional HTTP Headers always sent in the response","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"header","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":true,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.http.filter.\"filter\".methods","configDoc":"The HTTP methods for this path configuration","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"methods","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":true,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"java.lang.Integer","key":"quarkus.http.filter.\"filter\".order","configDoc":"","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"order","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.http.proxy.proxy-address-forwarding","configDoc":"If this is true then the address, scheme etc. will be set from headers forwarded by the proxy server, such as `X-Forwarded-For`. This should only be set if you are behind a proxy that sets these headers.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"proxy-address-forwarding","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.http.proxy.allow-forwarded","configDoc":"If this is true and proxy address forwarding is enabled then the standard `Forwarded` header will be used. In case the not standard `X-Forwarded-For` header is enabled and detected on HTTP requests, the standard header has the precedence. Activating this together with `quarkus.http.proxy.allow-x-forwarded` has security implications as clients can forge requests with a forwarded header that is not overwritten by the proxy. Therefore, proxies should strip unexpected `X-Forwarded` or `X-Forwarded-++*++` headers from the client.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"allow-forwarded","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"java.lang.Boolean","key":"quarkus.http.proxy.allow-x-forwarded","configDoc":"If either this or `allow-forwarded` are true and proxy address forwarding is enabled then the not standard `Forwarded` header will be used. In case the standard `Forwarded` header is enabled and detected on HTTP requests, the standard header has the precedence. Activating this together with `quarkus.http.proxy.allow-forwarded` has security implications as clients can forge requests with a forwarded header that is not overwritten by the proxy. Therefore, proxies should strip unexpected `X-Forwarded` or `X-Forwarded-++*++` headers from the client.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"allow-x-forwarded","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.http.proxy.enable-forwarded-host","configDoc":"Enable override the received request's host through a forwarded host header.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"enable-forwarded-host","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.http.proxy.forwarded-host-header","configDoc":"Configure the forwarded host header to be used if override enabled.","withinAMap":false,"defaultValue":"X-Forwarded-Host","javaDocSiteLink":"","docMapKey":"forwarded-host-header","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"boolean","key":"quarkus.http.proxy.enable-forwarded-prefix","configDoc":"Enable prefix the received request's path with a forwarded prefix header.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"enable-forwarded-prefix","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.http.proxy.forwarded-prefix-header","configDoc":"Configure the forwarded prefix header to be used if prefixing enabled.","withinAMap":false,"defaultValue":"X-Forwarded-Prefix","javaDocSiteLink":"","docMapKey":"forwarded-prefix-header","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}},{"configDocKey":{"type":"io.quarkus.vertx.http.runtime.TrustedProxyCheck.TrustedProxyCheckPart","key":"quarkus.http.proxy.trusted-proxies","configDoc":"Configure the list of trusted proxy addresses. Received `Forwarded`, `X-Forwarded` or `X-Forwarded-++*++` headers from any other proxy address will be ignored. The trusted proxy address should be specified as the IP address (IPv4 or IPv6), hostname or Classless Inter-Domain Routing (CIDR) notation. Please note that Quarkus needs to perform DNS lookup for all hostnames during the request. For that reason, using hostnames is not recommended. Examples of a socket address in the form of `host` or `host:port`:  \n - `127.0.0.1:8084` \n - `++[++0:0:0:0:0:0:0:1++]++` \n - `++[++0:0:0:0:0:0:0:1++]++:8084` \n - `++[++::++]++` \n - `localhost` \n - `localhost:8084`  Examples of a CIDR notation:  \n - `::/128` \n - `::/0` \n - `127.0.0.0/8`  Please bear in mind that IPv4 CIDR won't match request sent from the IPv6 address and the other way around.","withinAMap":false,"defaultValue":"All proxy addresses are trusted","javaDocSiteLink":"","docMapKey":"trusted-proxies","configPhase":"RUN_TIME","acceptedValues":null,"optional":true,"list":true,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.http","enum":false}}]