[{"configDocKey":{"type":"string","key":"quarkus.quartz.instance-name","configDoc":"The name of the Quartz instance.","withinAMap":false,"defaultValue":"QuarkusQuartzScheduler","javaDocSiteLink":"","docMapKey":"instance-name","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.quartz","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.quartz.instance-id","configDoc":"The identifier of Quartz instance that must be unique for all schedulers working as if they are the same _logical_ Scheduler within a cluster. Use the default value `AUTO` or some of the configured link:https://quarkus.io/guides/quartz#quarkus-quartz_quarkus.quartz.instance-id-generators-instance-id-generators[instance ID generators] if you wish the identifier to be generated for you.","withinAMap":false,"defaultValue":"AUTO","javaDocSiteLink":"","docMapKey":"instance-id","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.quartz","enum":false}},{"configDocKey":{"type":"long","key":"quarkus.quartz.batch-trigger-acquisition-fire-ahead-time-window","configDoc":"The amount of time in milliseconds that a trigger is allowed to be acquired and fired ahead of its scheduled fire time.","withinAMap":false,"defaultValue":"0","javaDocSiteLink":"","docMapKey":"batch-trigger-acquisition-fire-ahead-time-window","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.quartz","enum":false}},{"configDocKey":{"type":"int","key":"quarkus.quartz.batch-trigger-acquisition-max-count","configDoc":"The maximum number of triggers that a scheduler node is allowed to acquire (for firing) at once.","withinAMap":false,"defaultValue":"1","javaDocSiteLink":"","docMapKey":"batch-trigger-acquisition-max-count","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.quartz","enum":false}},{"configDocKey":{"type":"int","key":"quarkus.quartz.thread-count","configDoc":"The size of scheduler thread pool. This will initialize the number of worker threads in the pool.","withinAMap":false,"defaultValue":"25","javaDocSiteLink":"","docMapKey":"thread-count","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.quartz","enum":false}},{"configDocKey":{"type":"int","key":"quarkus.quartz.thread-priority","configDoc":"Thread priority of worker threads in the pool.","withinAMap":false,"defaultValue":"5","javaDocSiteLink":"","docMapKey":"thread-priority","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.quartz","enum":false}},{"configDocKey":{"type":"java.time.Duration","key":"quarkus.quartz.misfire-threshold","configDoc":"Defines how late the schedulers should be to be considered misfired.","withinAMap":false,"defaultValue":"60S","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"misfire-threshold","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.quartz","enum":false}},{"configDocKey":{"type":"java.time.Duration","key":"quarkus.quartz.shutdown-wait-time","configDoc":"The maximum amount of time Quarkus will wait for currently running jobs to finish. If the value is `0`, then Quarkus will not wait at all for these jobs to finish - it will call `org.quartz.Scheduler.shutdown(false)` in this case.","withinAMap":false,"defaultValue":"10S","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"shutdown-wait-time","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.quartz","enum":false}},{"configDocKey":{"type":"io.quarkus.quartz.runtime.QuartzMisfirePolicy","key":"quarkus.quartz.simple-trigger.misfire-policy","configDoc":"The quartz misfire policy for this job.","withinAMap":false,"defaultValue":"smart-policy","javaDocSiteLink":"","docMapKey":"misfire-policy","configPhase":"RUN_TIME","acceptedValues":["`smart-policy`","`ignore-misfire-policy`","`fire-now`","`simple-trigger-reschedule-now-with-existing-repeat-count`","`simple-trigger-reschedule-now-with-remaining-repeat-count`","`simple-trigger-reschedule-next-with-remaining-count`","`simple-trigger-reschedule-next-with-existing-count`","`cron-trigger-do-nothing`"],"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.quartz","enum":true}},{"configDocKey":{"type":"io.quarkus.quartz.runtime.QuartzMisfirePolicy","key":"quarkus.quartz.cron-trigger.misfire-policy","configDoc":"The quartz misfire policy for this job.","withinAMap":false,"defaultValue":"smart-policy","javaDocSiteLink":"","docMapKey":"misfire-policy","configPhase":"RUN_TIME","acceptedValues":["`smart-policy`","`ignore-misfire-policy`","`fire-now`","`simple-trigger-reschedule-now-with-existing-repeat-count`","`simple-trigger-reschedule-now-with-remaining-repeat-count`","`simple-trigger-reschedule-next-with-remaining-count`","`simple-trigger-reschedule-next-with-existing-count`","`cron-trigger-do-nothing`"],"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.quartz","enum":true}},{"configDocSection":{"name":"quarkus.quartz.misfire-policy-per-jobs","optional":false,"withinAMap":false,"sectionDetails":"= Misfire policy per job configuration","sectionDetailsTitle":"Misfire policy per job configuration","configPhase":"RUN_TIME","topLevelGrouping":"quarkus.quartz","configGroupType":"io.quarkus.quartz.runtime.QuartzRuntimeConfig.QuartzMisfirePolicyConfig","showSection":true,"configDocItems":[{"configDocKey":{"type":"io.quarkus.quartz.runtime.QuartzMisfirePolicy","key":"quarkus.quartz.misfire-policy.\"identity\"","configDoc":"The quartz misfire policy for this job.","withinAMap":true,"defaultValue":"smart-policy","javaDocSiteLink":"","docMapKey":"misfire-policy","configPhase":"RUN_TIME","acceptedValues":["`smart-policy`","`ignore-misfire-policy`","`fire-now`","`simple-trigger-reschedule-now-with-existing-repeat-count`","`simple-trigger-reschedule-now-with-remaining-repeat-count`","`simple-trigger-reschedule-next-with-remaining-count`","`simple-trigger-reschedule-next-with-existing-count`","`cron-trigger-do-nothing`"],"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.quartz","enum":true}}],"anchorPrefix":null}},{"configDocKey":{"type":"boolean","key":"quarkus.quartz.run-blocking-scheduled-method-on-quartz-thread","configDoc":"When set to `true`, blocking scheduled methods are invoked on a thread managed by Quartz instead of a thread from the regular Quarkus thread pool (default). \nWhen this option is enabled, blocking scheduled methods do not run on a `duplicated context`.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"run-blocking-scheduled-method-on-quartz-thread","configPhase":"RUN_TIME","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.quartz","enum":false}}]