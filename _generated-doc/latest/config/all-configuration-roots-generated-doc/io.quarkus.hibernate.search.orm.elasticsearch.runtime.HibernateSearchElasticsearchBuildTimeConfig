[{"configDocKey":{"type":"boolean","key":"quarkus.hibernate-search-orm.enabled","configDoc":"Whether Hibernate Search is enabled **during the build**.\n\nIf Hibernate Search is disabled during the build, all processing related to Hibernate Search will be skipped,\nbut it will not be possible to activate Hibernate Search at runtime:\n`quarkus.hibernate-search-orm.active` will default to `false` and setting it to `true` will lead to an error.","withinAMap":false,"defaultValue":"true","javaDocSiteLink":"","docMapKey":"enabled","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":false,"list":false,"passThroughMap":false,"withinAConfigGroup":false,"topLevelGrouping":"quarkus.hibernate-search-orm","enum":false}},{"configDocSection":{"name":"quarkus.hibernate-search-orm.default-backend","optional":false,"withinAMap":false,"sectionDetails":"== Default backend","sectionDetailsTitle":"Default backend","configPhase":"BUILD_AND_RUN_TIME_FIXED","topLevelGrouping":"quarkus.hibernate-search-orm","configGroupType":"io.quarkus.hibernate.search.orm.elasticsearch.runtime.HibernateSearchElasticsearchBuildTimeConfigPersistenceUnit.ElasticsearchBackendBuildTimeConfig","showSection":true,"configDocItems":[{"configDocKey":{"type":"org.hibernate.search.backend.elasticsearch.ElasticsearchVersion","key":"quarkus.hibernate-search-orm.elasticsearch.version","configDoc":"The version of Elasticsearch used in the cluster.\n\nAs the schema is generated without a connection to the server, this item is mandatory.\n\nIt doesn't have to be the exact version (it can be `7` or `7.1` for instance) but it has to be sufficiently precise\nto choose a model dialect (the one used to generate the schema) compatible with the protocol dialect (the one used\nto communicate with Elasticsearch).\n\nThere's no rule of thumb here as it depends on the schema incompatibilities introduced by Elasticsearch versions. In\nany case, if there is a problem, you will have an error when Hibernate Search tries to connect to the cluster.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"version","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-search-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-search-orm.elasticsearch.layout.strategy","configDoc":"A xref:hibernate-search-orm-elasticsearch.adoc#bean-reference-note-anchor[bean reference] to the component\nused to configure layout (e.g. index names, index aliases).\n\nThe referenced bean must implement `IndexLayoutStrategy`.\n\nAvailable built-in implementations:\n\n`simple`::\nThe default, future-proof strategy: if the index name in Hibernate Search is `myIndex`,\nthis strategy will create an index named `myindex-000001`, an alias for write operations named `myindex-write`,\nand an alias for read operations named `myindex-read`.\n`no-alias`::\nA strategy without index aliases, mostly useful on legacy clusters:\nif the index name in Hibernate Search is `myIndex`,\nthis strategy will create an index named `myindex`, and will not use any alias.\n\nSee\nlink:{hibernate-search-doc-prefix}#backend-elasticsearch-indexlayout[this section of the reference documentation]\nfor more information.\n\n[NOTE]\n====\nInstead of setting this configuration property,\nyou can simply annotate your custom `IndexLayoutStrategy` implementation with `@SearchExtension`\nand leave the configuration property unset: Hibernate Search will use the annotated implementation automatically.\nIf this configuration property is set, it takes precedence over any `@SearchExtension` annotation.\n====","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"strategy","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-search-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-search-orm.elasticsearch.schema-management.settings-file","configDoc":"Path to a file in the classpath holding custom index settings to be included in the index definition\nwhen creating an Elasticsearch index.\n\nThe provided settings will be merged with those generated by Hibernate Search, including analyzer definitions.\nWhen analysis is configured both through an analysis configurer and these custom settings, the behavior is undefined;\nit should not be relied upon.\n\nSee https://docs.jboss.org/hibernate/stable/search/reference/en-US/html_single/#backend-elasticsearch-configuration-index-settings[this section of the reference documentation]\nfor more information.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"settings-file","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-search-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-search-orm.elasticsearch.schema-management.mapping-file","configDoc":"Path to a file in the classpath holding a custom index mapping to be included in the index definition\nwhen creating an Elasticsearch index.\n\nThe file does not need to (and generally shouldn't) contain the full mapping:\nHibernate Search will automatically inject missing properties (index fields) in the given mapping.\n\nSee https://docs.jboss.org/hibernate/stable/search/reference/en-US/html_single/#backend-elasticsearch-mapping-custom[this section of the reference documentation]\nfor more information.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"mapping-file","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-search-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-search-orm.elasticsearch.analysis.configurer","configDoc":"A xref:hibernate-search-orm-elasticsearch.adoc#bean-reference-note-anchor[bean reference] to the component\nused to configure full text analysis (e.g. analyzers, normalizers).\n\nThe referenced bean must implement `ElasticsearchAnalysisConfigurer`.\n\nSee xref:hibernate-search-orm-elasticsearch.adoc#analysis-configurer[Setting up the analyzers] for more\ninformation.\n\n[NOTE]\n====\nInstead of setting this configuration property,\nyou can simply annotate your custom `ElasticsearchAnalysisConfigurer` implementation with `@SearchExtension`\nand leave the configuration property unset: Hibernate Search will use the annotated implementation automatically.\nIf this configuration property is set, it takes precedence over any `@SearchExtension` annotation.\n====","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"configurer","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-search-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-search-orm.elasticsearch.indexes.\"index-name\".schema-management.settings-file","configDoc":"Path to a file in the classpath holding custom index settings to be included in the index definition\nwhen creating an Elasticsearch index.\n\nThe provided settings will be merged with those generated by Hibernate Search, including analyzer definitions.\nWhen analysis is configured both through an analysis configurer and these custom settings, the behavior is undefined;\nit should not be relied upon.\n\nSee https://docs.jboss.org/hibernate/stable/search/reference/en-US/html_single/#backend-elasticsearch-configuration-index-settings[this section of the reference documentation]\nfor more information.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"settings-file","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-search-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-search-orm.elasticsearch.indexes.\"index-name\".schema-management.mapping-file","configDoc":"Path to a file in the classpath holding a custom index mapping to be included in the index definition\nwhen creating an Elasticsearch index.\n\nThe file does not need to (and generally shouldn't) contain the full mapping:\nHibernate Search will automatically inject missing properties (index fields) in the given mapping.\n\nSee https://docs.jboss.org/hibernate/stable/search/reference/en-US/html_single/#backend-elasticsearch-mapping-custom[this section of the reference documentation]\nfor more information.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"mapping-file","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-search-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-search-orm.elasticsearch.indexes.\"index-name\".analysis.configurer","configDoc":"A xref:hibernate-search-orm-elasticsearch.adoc#bean-reference-note-anchor[bean reference] to the component\nused to configure full text analysis (e.g. analyzers, normalizers).\n\nThe referenced bean must implement `ElasticsearchAnalysisConfigurer`.\n\nSee xref:hibernate-search-orm-elasticsearch.adoc#analysis-configurer[Setting up the analyzers] for more\ninformation.\n\n[NOTE]\n====\nInstead of setting this configuration property,\nyou can simply annotate your custom `ElasticsearchAnalysisConfigurer` implementation with `@SearchExtension`\nand leave the configuration property unset: Hibernate Search will use the annotated implementation automatically.\nIf this configuration property is set, it takes precedence over any `@SearchExtension` annotation.\n====","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"configurer","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-search-orm","enum":false}}],"anchorPrefix":null}},{"configDocSection":{"name":"quarkus.hibernate-search-orm.named-backends","optional":false,"withinAMap":false,"sectionDetails":"== Named backends","sectionDetailsTitle":"Named backends","configPhase":"BUILD_AND_RUN_TIME_FIXED","topLevelGrouping":"quarkus.hibernate-search-orm","configGroupType":"io.quarkus.hibernate.search.orm.elasticsearch.runtime.HibernateSearchElasticsearchBuildTimeConfigPersistenceUnit.ElasticsearchNamedBackendsBuildTimeConfig","showSection":true,"configDocItems":[{"configDocKey":{"type":"org.hibernate.search.backend.elasticsearch.ElasticsearchVersion","key":"quarkus.hibernate-search-orm.elasticsearch.backends.\"backend-name\".version","configDoc":"The version of Elasticsearch used in the cluster.\n\nAs the schema is generated without a connection to the server, this item is mandatory.\n\nIt doesn't have to be the exact version (it can be `7` or `7.1` for instance) but it has to be sufficiently precise\nto choose a model dialect (the one used to generate the schema) compatible with the protocol dialect (the one used\nto communicate with Elasticsearch).\n\nThere's no rule of thumb here as it depends on the schema incompatibilities introduced by Elasticsearch versions. In\nany case, if there is a problem, you will have an error when Hibernate Search tries to connect to the cluster.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"version","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-search-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-search-orm.elasticsearch.backends.\"backend-name\".layout.strategy","configDoc":"A xref:hibernate-search-orm-elasticsearch.adoc#bean-reference-note-anchor[bean reference] to the component\nused to configure layout (e.g. index names, index aliases).\n\nThe referenced bean must implement `IndexLayoutStrategy`.\n\nAvailable built-in implementations:\n\n`simple`::\nThe default, future-proof strategy: if the index name in Hibernate Search is `myIndex`,\nthis strategy will create an index named `myindex-000001`, an alias for write operations named `myindex-write`,\nand an alias for read operations named `myindex-read`.\n`no-alias`::\nA strategy without index aliases, mostly useful on legacy clusters:\nif the index name in Hibernate Search is `myIndex`,\nthis strategy will create an index named `myindex`, and will not use any alias.\n\nSee\nlink:{hibernate-search-doc-prefix}#backend-elasticsearch-indexlayout[this section of the reference documentation]\nfor more information.\n\n[NOTE]\n====\nInstead of setting this configuration property,\nyou can simply annotate your custom `IndexLayoutStrategy` implementation with `@SearchExtension`\nand leave the configuration property unset: Hibernate Search will use the annotated implementation automatically.\nIf this configuration property is set, it takes precedence over any `@SearchExtension` annotation.\n====","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"strategy","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-search-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-search-orm.elasticsearch.backends.\"backend-name\".schema-management.settings-file","configDoc":"Path to a file in the classpath holding custom index settings to be included in the index definition\nwhen creating an Elasticsearch index.\n\nThe provided settings will be merged with those generated by Hibernate Search, including analyzer definitions.\nWhen analysis is configured both through an analysis configurer and these custom settings, the behavior is undefined;\nit should not be relied upon.\n\nSee https://docs.jboss.org/hibernate/stable/search/reference/en-US/html_single/#backend-elasticsearch-configuration-index-settings[this section of the reference documentation]\nfor more information.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"settings-file","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-search-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-search-orm.elasticsearch.backends.\"backend-name\".schema-management.mapping-file","configDoc":"Path to a file in the classpath holding a custom index mapping to be included in the index definition\nwhen creating an Elasticsearch index.\n\nThe file does not need to (and generally shouldn't) contain the full mapping:\nHibernate Search will automatically inject missing properties (index fields) in the given mapping.\n\nSee https://docs.jboss.org/hibernate/stable/search/reference/en-US/html_single/#backend-elasticsearch-mapping-custom[this section of the reference documentation]\nfor more information.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"mapping-file","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-search-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-search-orm.elasticsearch.backends.\"backend-name\".analysis.configurer","configDoc":"A xref:hibernate-search-orm-elasticsearch.adoc#bean-reference-note-anchor[bean reference] to the component\nused to configure full text analysis (e.g. analyzers, normalizers).\n\nThe referenced bean must implement `ElasticsearchAnalysisConfigurer`.\n\nSee xref:hibernate-search-orm-elasticsearch.adoc#analysis-configurer[Setting up the analyzers] for more\ninformation.\n\n[NOTE]\n====\nInstead of setting this configuration property,\nyou can simply annotate your custom `ElasticsearchAnalysisConfigurer` implementation with `@SearchExtension`\nand leave the configuration property unset: Hibernate Search will use the annotated implementation automatically.\nIf this configuration property is set, it takes precedence over any `@SearchExtension` annotation.\n====","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"configurer","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-search-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-search-orm.elasticsearch.backends.\"backend-name\".indexes.\"index-name\".schema-management.settings-file","configDoc":"Path to a file in the classpath holding custom index settings to be included in the index definition\nwhen creating an Elasticsearch index.\n\nThe provided settings will be merged with those generated by Hibernate Search, including analyzer definitions.\nWhen analysis is configured both through an analysis configurer and these custom settings, the behavior is undefined;\nit should not be relied upon.\n\nSee https://docs.jboss.org/hibernate/stable/search/reference/en-US/html_single/#backend-elasticsearch-configuration-index-settings[this section of the reference documentation]\nfor more information.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"settings-file","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-search-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-search-orm.elasticsearch.backends.\"backend-name\".indexes.\"index-name\".schema-management.mapping-file","configDoc":"Path to a file in the classpath holding a custom index mapping to be included in the index definition\nwhen creating an Elasticsearch index.\n\nThe file does not need to (and generally shouldn't) contain the full mapping:\nHibernate Search will automatically inject missing properties (index fields) in the given mapping.\n\nSee https://docs.jboss.org/hibernate/stable/search/reference/en-US/html_single/#backend-elasticsearch-mapping-custom[this section of the reference documentation]\nfor more information.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"mapping-file","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-search-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-search-orm.elasticsearch.backends.\"backend-name\".indexes.\"index-name\".analysis.configurer","configDoc":"A xref:hibernate-search-orm-elasticsearch.adoc#bean-reference-note-anchor[bean reference] to the component\nused to configure full text analysis (e.g. analyzers, normalizers).\n\nThe referenced bean must implement `ElasticsearchAnalysisConfigurer`.\n\nSee xref:hibernate-search-orm-elasticsearch.adoc#analysis-configurer[Setting up the analyzers] for more\ninformation.\n\n[NOTE]\n====\nInstead of setting this configuration property,\nyou can simply annotate your custom `ElasticsearchAnalysisConfigurer` implementation with `@SearchExtension`\nand leave the configuration property unset: Hibernate Search will use the annotated implementation automatically.\nIf this configuration property is set, it takes precedence over any `@SearchExtension` annotation.\n====","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"configurer","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-search-orm","enum":false}}],"anchorPrefix":null}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-search-orm.background-failure-handler","configDoc":"A xref:hibernate-search-orm-elasticsearch.adoc#bean-reference-note-anchor[bean reference] to a component\nthat should be notified of any failure occurring in a background process\n(mainly index operations).\n\nThe referenced bean must implement `FailureHandler`.\n\n[NOTE]\n====\nInstead of setting this configuration property,\nyou can simply annotate your custom `FailureHandler` implementation with `@SearchExtension`\nand leave the configuration property unset: Hibernate Search will use the annotated implementation automatically.\nIf this configuration property is set, it takes precedence over any `@SearchExtension` annotation.\n====","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"background-failure-handler","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-search-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-search-orm.coordination.strategy","configDoc":"The strategy to use for coordinating between threads or even separate instances of the application,\nin particular in automatic indexing.\n\nSee xref:hibernate-search-orm-elasticsearch.adoc#coordination[coordination] for more information.","withinAMap":false,"defaultValue":"none","javaDocSiteLink":"","docMapKey":"strategy","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-search-orm","enum":false}},{"configDocSection":{"name":"quarkus.hibernate-search-orm.persistence-units","optional":false,"withinAMap":false,"sectionDetails":"= Configuration for additional named persistence units","sectionDetailsTitle":"Configuration for additional named persistence units","configPhase":"BUILD_AND_RUN_TIME_FIXED","topLevelGrouping":"quarkus.hibernate-search-orm","configGroupType":"io.quarkus.hibernate.search.orm.elasticsearch.runtime.HibernateSearchElasticsearchBuildTimeConfigPersistenceUnit","showSection":true,"configDocItems":[{"configDocSection":{"name":"quarkus.hibernate-search-orm.\"persistence-unit-name\".default-backend","optional":false,"withinAMap":true,"sectionDetails":"== Default backend","sectionDetailsTitle":"Default backend","configPhase":"BUILD_AND_RUN_TIME_FIXED","topLevelGrouping":"quarkus.hibernate-search-orm","configGroupType":"io.quarkus.hibernate.search.orm.elasticsearch.runtime.HibernateSearchElasticsearchBuildTimeConfigPersistenceUnit.ElasticsearchBackendBuildTimeConfig","showSection":true,"configDocItems":[{"configDocKey":{"type":"org.hibernate.search.backend.elasticsearch.ElasticsearchVersion","key":"quarkus.hibernate-search-orm.\"persistence-unit-name\".elasticsearch.version","configDoc":"The version of Elasticsearch used in the cluster.\n\nAs the schema is generated without a connection to the server, this item is mandatory.\n\nIt doesn't have to be the exact version (it can be `7` or `7.1` for instance) but it has to be sufficiently precise\nto choose a model dialect (the one used to generate the schema) compatible with the protocol dialect (the one used\nto communicate with Elasticsearch).\n\nThere's no rule of thumb here as it depends on the schema incompatibilities introduced by Elasticsearch versions. In\nany case, if there is a problem, you will have an error when Hibernate Search tries to connect to the cluster.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"version","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-search-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-search-orm.\"persistence-unit-name\".elasticsearch.layout.strategy","configDoc":"A xref:hibernate-search-orm-elasticsearch.adoc#bean-reference-note-anchor[bean reference] to the component\nused to configure layout (e.g. index names, index aliases).\n\nThe referenced bean must implement `IndexLayoutStrategy`.\n\nAvailable built-in implementations:\n\n`simple`::\nThe default, future-proof strategy: if the index name in Hibernate Search is `myIndex`,\nthis strategy will create an index named `myindex-000001`, an alias for write operations named `myindex-write`,\nand an alias for read operations named `myindex-read`.\n`no-alias`::\nA strategy without index aliases, mostly useful on legacy clusters:\nif the index name in Hibernate Search is `myIndex`,\nthis strategy will create an index named `myindex`, and will not use any alias.\n\nSee\nlink:{hibernate-search-doc-prefix}#backend-elasticsearch-indexlayout[this section of the reference documentation]\nfor more information.\n\n[NOTE]\n====\nInstead of setting this configuration property,\nyou can simply annotate your custom `IndexLayoutStrategy` implementation with `@SearchExtension`\nand leave the configuration property unset: Hibernate Search will use the annotated implementation automatically.\nIf this configuration property is set, it takes precedence over any `@SearchExtension` annotation.\n====","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"strategy","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-search-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-search-orm.\"persistence-unit-name\".elasticsearch.schema-management.settings-file","configDoc":"Path to a file in the classpath holding custom index settings to be included in the index definition\nwhen creating an Elasticsearch index.\n\nThe provided settings will be merged with those generated by Hibernate Search, including analyzer definitions.\nWhen analysis is configured both through an analysis configurer and these custom settings, the behavior is undefined;\nit should not be relied upon.\n\nSee https://docs.jboss.org/hibernate/stable/search/reference/en-US/html_single/#backend-elasticsearch-configuration-index-settings[this section of the reference documentation]\nfor more information.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"settings-file","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-search-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-search-orm.\"persistence-unit-name\".elasticsearch.schema-management.mapping-file","configDoc":"Path to a file in the classpath holding a custom index mapping to be included in the index definition\nwhen creating an Elasticsearch index.\n\nThe file does not need to (and generally shouldn't) contain the full mapping:\nHibernate Search will automatically inject missing properties (index fields) in the given mapping.\n\nSee https://docs.jboss.org/hibernate/stable/search/reference/en-US/html_single/#backend-elasticsearch-mapping-custom[this section of the reference documentation]\nfor more information.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"mapping-file","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-search-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-search-orm.\"persistence-unit-name\".elasticsearch.analysis.configurer","configDoc":"A xref:hibernate-search-orm-elasticsearch.adoc#bean-reference-note-anchor[bean reference] to the component\nused to configure full text analysis (e.g. analyzers, normalizers).\n\nThe referenced bean must implement `ElasticsearchAnalysisConfigurer`.\n\nSee xref:hibernate-search-orm-elasticsearch.adoc#analysis-configurer[Setting up the analyzers] for more\ninformation.\n\n[NOTE]\n====\nInstead of setting this configuration property,\nyou can simply annotate your custom `ElasticsearchAnalysisConfigurer` implementation with `@SearchExtension`\nand leave the configuration property unset: Hibernate Search will use the annotated implementation automatically.\nIf this configuration property is set, it takes precedence over any `@SearchExtension` annotation.\n====","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"configurer","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-search-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-search-orm.\"persistence-unit-name\".elasticsearch.indexes.\"index-name\".schema-management.settings-file","configDoc":"Path to a file in the classpath holding custom index settings to be included in the index definition\nwhen creating an Elasticsearch index.\n\nThe provided settings will be merged with those generated by Hibernate Search, including analyzer definitions.\nWhen analysis is configured both through an analysis configurer and these custom settings, the behavior is undefined;\nit should not be relied upon.\n\nSee https://docs.jboss.org/hibernate/stable/search/reference/en-US/html_single/#backend-elasticsearch-configuration-index-settings[this section of the reference documentation]\nfor more information.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"settings-file","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-search-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-search-orm.\"persistence-unit-name\".elasticsearch.indexes.\"index-name\".schema-management.mapping-file","configDoc":"Path to a file in the classpath holding a custom index mapping to be included in the index definition\nwhen creating an Elasticsearch index.\n\nThe file does not need to (and generally shouldn't) contain the full mapping:\nHibernate Search will automatically inject missing properties (index fields) in the given mapping.\n\nSee https://docs.jboss.org/hibernate/stable/search/reference/en-US/html_single/#backend-elasticsearch-mapping-custom[this section of the reference documentation]\nfor more information.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"mapping-file","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-search-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-search-orm.\"persistence-unit-name\".elasticsearch.indexes.\"index-name\".analysis.configurer","configDoc":"A xref:hibernate-search-orm-elasticsearch.adoc#bean-reference-note-anchor[bean reference] to the component\nused to configure full text analysis (e.g. analyzers, normalizers).\n\nThe referenced bean must implement `ElasticsearchAnalysisConfigurer`.\n\nSee xref:hibernate-search-orm-elasticsearch.adoc#analysis-configurer[Setting up the analyzers] for more\ninformation.\n\n[NOTE]\n====\nInstead of setting this configuration property,\nyou can simply annotate your custom `ElasticsearchAnalysisConfigurer` implementation with `@SearchExtension`\nand leave the configuration property unset: Hibernate Search will use the annotated implementation automatically.\nIf this configuration property is set, it takes precedence over any `@SearchExtension` annotation.\n====","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"configurer","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-search-orm","enum":false}}],"anchorPrefix":null}},{"configDocSection":{"name":"quarkus.hibernate-search-orm.\"persistence-unit-name\".named-backends","optional":false,"withinAMap":true,"sectionDetails":"== Named backends","sectionDetailsTitle":"Named backends","configPhase":"BUILD_AND_RUN_TIME_FIXED","topLevelGrouping":"quarkus.hibernate-search-orm","configGroupType":"io.quarkus.hibernate.search.orm.elasticsearch.runtime.HibernateSearchElasticsearchBuildTimeConfigPersistenceUnit.ElasticsearchNamedBackendsBuildTimeConfig","showSection":true,"configDocItems":[{"configDocKey":{"type":"org.hibernate.search.backend.elasticsearch.ElasticsearchVersion","key":"quarkus.hibernate-search-orm.\"persistence-unit-name\".elasticsearch.backends.\"backend-name\".version","configDoc":"The version of Elasticsearch used in the cluster.\n\nAs the schema is generated without a connection to the server, this item is mandatory.\n\nIt doesn't have to be the exact version (it can be `7` or `7.1` for instance) but it has to be sufficiently precise\nto choose a model dialect (the one used to generate the schema) compatible with the protocol dialect (the one used\nto communicate with Elasticsearch).\n\nThere's no rule of thumb here as it depends on the schema incompatibilities introduced by Elasticsearch versions. In\nany case, if there is a problem, you will have an error when Hibernate Search tries to connect to the cluster.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"version","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-search-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-search-orm.\"persistence-unit-name\".elasticsearch.backends.\"backend-name\".layout.strategy","configDoc":"A xref:hibernate-search-orm-elasticsearch.adoc#bean-reference-note-anchor[bean reference] to the component\nused to configure layout (e.g. index names, index aliases).\n\nThe referenced bean must implement `IndexLayoutStrategy`.\n\nAvailable built-in implementations:\n\n`simple`::\nThe default, future-proof strategy: if the index name in Hibernate Search is `myIndex`,\nthis strategy will create an index named `myindex-000001`, an alias for write operations named `myindex-write`,\nand an alias for read operations named `myindex-read`.\n`no-alias`::\nA strategy without index aliases, mostly useful on legacy clusters:\nif the index name in Hibernate Search is `myIndex`,\nthis strategy will create an index named `myindex`, and will not use any alias.\n\nSee\nlink:{hibernate-search-doc-prefix}#backend-elasticsearch-indexlayout[this section of the reference documentation]\nfor more information.\n\n[NOTE]\n====\nInstead of setting this configuration property,\nyou can simply annotate your custom `IndexLayoutStrategy` implementation with `@SearchExtension`\nand leave the configuration property unset: Hibernate Search will use the annotated implementation automatically.\nIf this configuration property is set, it takes precedence over any `@SearchExtension` annotation.\n====","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"strategy","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-search-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-search-orm.\"persistence-unit-name\".elasticsearch.backends.\"backend-name\".schema-management.settings-file","configDoc":"Path to a file in the classpath holding custom index settings to be included in the index definition\nwhen creating an Elasticsearch index.\n\nThe provided settings will be merged with those generated by Hibernate Search, including analyzer definitions.\nWhen analysis is configured both through an analysis configurer and these custom settings, the behavior is undefined;\nit should not be relied upon.\n\nSee https://docs.jboss.org/hibernate/stable/search/reference/en-US/html_single/#backend-elasticsearch-configuration-index-settings[this section of the reference documentation]\nfor more information.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"settings-file","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-search-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-search-orm.\"persistence-unit-name\".elasticsearch.backends.\"backend-name\".schema-management.mapping-file","configDoc":"Path to a file in the classpath holding a custom index mapping to be included in the index definition\nwhen creating an Elasticsearch index.\n\nThe file does not need to (and generally shouldn't) contain the full mapping:\nHibernate Search will automatically inject missing properties (index fields) in the given mapping.\n\nSee https://docs.jboss.org/hibernate/stable/search/reference/en-US/html_single/#backend-elasticsearch-mapping-custom[this section of the reference documentation]\nfor more information.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"mapping-file","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-search-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-search-orm.\"persistence-unit-name\".elasticsearch.backends.\"backend-name\".analysis.configurer","configDoc":"A xref:hibernate-search-orm-elasticsearch.adoc#bean-reference-note-anchor[bean reference] to the component\nused to configure full text analysis (e.g. analyzers, normalizers).\n\nThe referenced bean must implement `ElasticsearchAnalysisConfigurer`.\n\nSee xref:hibernate-search-orm-elasticsearch.adoc#analysis-configurer[Setting up the analyzers] for more\ninformation.\n\n[NOTE]\n====\nInstead of setting this configuration property,\nyou can simply annotate your custom `ElasticsearchAnalysisConfigurer` implementation with `@SearchExtension`\nand leave the configuration property unset: Hibernate Search will use the annotated implementation automatically.\nIf this configuration property is set, it takes precedence over any `@SearchExtension` annotation.\n====","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"configurer","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-search-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-search-orm.\"persistence-unit-name\".elasticsearch.backends.\"backend-name\".indexes.\"index-name\".schema-management.settings-file","configDoc":"Path to a file in the classpath holding custom index settings to be included in the index definition\nwhen creating an Elasticsearch index.\n\nThe provided settings will be merged with those generated by Hibernate Search, including analyzer definitions.\nWhen analysis is configured both through an analysis configurer and these custom settings, the behavior is undefined;\nit should not be relied upon.\n\nSee https://docs.jboss.org/hibernate/stable/search/reference/en-US/html_single/#backend-elasticsearch-configuration-index-settings[this section of the reference documentation]\nfor more information.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"settings-file","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-search-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-search-orm.\"persistence-unit-name\".elasticsearch.backends.\"backend-name\".indexes.\"index-name\".schema-management.mapping-file","configDoc":"Path to a file in the classpath holding a custom index mapping to be included in the index definition\nwhen creating an Elasticsearch index.\n\nThe file does not need to (and generally shouldn't) contain the full mapping:\nHibernate Search will automatically inject missing properties (index fields) in the given mapping.\n\nSee https://docs.jboss.org/hibernate/stable/search/reference/en-US/html_single/#backend-elasticsearch-mapping-custom[this section of the reference documentation]\nfor more information.","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"mapping-file","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-search-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-search-orm.\"persistence-unit-name\".elasticsearch.backends.\"backend-name\".indexes.\"index-name\".analysis.configurer","configDoc":"A xref:hibernate-search-orm-elasticsearch.adoc#bean-reference-note-anchor[bean reference] to the component\nused to configure full text analysis (e.g. analyzers, normalizers).\n\nThe referenced bean must implement `ElasticsearchAnalysisConfigurer`.\n\nSee xref:hibernate-search-orm-elasticsearch.adoc#analysis-configurer[Setting up the analyzers] for more\ninformation.\n\n[NOTE]\n====\nInstead of setting this configuration property,\nyou can simply annotate your custom `ElasticsearchAnalysisConfigurer` implementation with `@SearchExtension`\nand leave the configuration property unset: Hibernate Search will use the annotated implementation automatically.\nIf this configuration property is set, it takes precedence over any `@SearchExtension` annotation.\n====","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"configurer","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-search-orm","enum":false}}],"anchorPrefix":null}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-search-orm.\"persistence-unit-name\".background-failure-handler","configDoc":"A xref:hibernate-search-orm-elasticsearch.adoc#bean-reference-note-anchor[bean reference] to a component\nthat should be notified of any failure occurring in a background process\n(mainly index operations).\n\nThe referenced bean must implement `FailureHandler`.\n\n[NOTE]\n====\nInstead of setting this configuration property,\nyou can simply annotate your custom `FailureHandler` implementation with `@SearchExtension`\nand leave the configuration property unset: Hibernate Search will use the annotated implementation automatically.\nIf this configuration property is set, it takes precedence over any `@SearchExtension` annotation.\n====","withinAMap":true,"defaultValue":"","javaDocSiteLink":"","docMapKey":"background-failure-handler","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-search-orm","enum":false}},{"configDocKey":{"type":"string","key":"quarkus.hibernate-search-orm.\"persistence-unit-name\".coordination.strategy","configDoc":"The strategy to use for coordinating between threads or even separate instances of the application,\nin particular in automatic indexing.\n\nSee xref:hibernate-search-orm-elasticsearch.adoc#coordination[coordination] for more information.","withinAMap":true,"defaultValue":"none","javaDocSiteLink":"","docMapKey":"strategy","configPhase":"BUILD_AND_RUN_TIME_FIXED","acceptedValues":null,"optional":true,"list":false,"passThroughMap":false,"withinAConfigGroup":true,"topLevelGrouping":"quarkus.hibernate-search-orm","enum":false}}],"anchorPrefix":null}}]